<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>runtime.libcCall (8 samples, 0.28%)</title><rect x="668.9" y="229" width="3.4" height="15.0" fill="rgb(208,4,35)" rx="2" ry="2" />
<text  x="671.94" y="239.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (4 samples, 0.14%)</title><rect x="39.2" y="565" width="1.7" height="15.0" fill="rgb(205,55,21)" rx="2" ry="2" />
<text  x="42.25" y="575.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (2 samples, 0.07%)</title><rect x="783.9" y="533" width="0.8" height="15.0" fill="rgb(234,150,36)" rx="2" ry="2" />
<text  x="786.85" y="543.5" ></text>
</g>
<g >
<title>net.(*TCPListener).Accept (24 samples, 0.85%)</title><rect x="28.4" y="549" width="10.0" height="15.0" fill="rgb(253,65,48)" rx="2" ry="2" />
<text  x="31.39" y="559.5" ></text>
</g>
<g >
<title>net.internetSocket (3 samples, 0.11%)</title><rect x="90.2" y="261" width="1.3" height="15.0" fill="rgb(223,52,20)" rx="2" ry="2" />
<text  x="93.23" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (1 samples, 0.04%)</title><rect x="768.8" y="533" width="0.4" height="15.0" fill="rgb(253,100,54)" rx="2" ry="2" />
<text  x="771.81" y="543.5" ></text>
</g>
<g >
<title>runtime.notewakeup (13 samples, 0.46%)</title><rect x="1181.2" y="517" width="5.5" height="15.0" fill="rgb(236,215,53)" rx="2" ry="2" />
<text  x="1184.23" y="527.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*binaryRows).readRow (1 samples, 0.04%)</title><rect x="679.0" y="309" width="0.4" height="15.0" fill="rgb(246,155,13)" rx="2" ry="2" />
<text  x="681.97" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.04%)</title><rect x="1177.5" y="533" width="0.4" height="15.0" fill="rgb(207,169,24)" rx="2" ry="2" />
<text  x="1180.46" y="543.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).QueryContext (10 samples, 0.35%)</title><rect x="702.0" y="341" width="4.1" height="15.0" fill="rgb(225,225,54)" rx="2" ry="2" />
<text  x="704.95" y="351.5" ></text>
</g>
<g >
<title>database/sql.ctxDriverPrepare (587 samples, 20.79%)</title><rect x="257.8" y="325" width="245.3" height="15.0" fill="rgb(251,187,13)" rx="2" ry="2" />
<text  x="260.78" y="335.5" >database/sql.ctxDriverPrepare</text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (12 samples, 0.42%)</title><rect x="755.9" y="277" width="5.0" height="15.0" fill="rgb(217,147,46)" rx="2" ry="2" />
<text  x="758.86" y="287.5" ></text>
</g>
<g >
<title>syscall.Read (1 samples, 0.04%)</title><rect x="701.1" y="261" width="0.4" height="15.0" fill="rgb(249,109,25)" rx="2" ry="2" />
<text  x="704.12" y="271.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="1167.4" y="533" width="0.5" height="15.0" fill="rgb(205,55,5)" rx="2" ry="2" />
<text  x="1170.44" y="543.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.04%)</title><rect x="409.9" y="149" width="0.4" height="15.0" fill="rgb(209,211,25)" rx="2" ry="2" />
<text  x="412.88" y="159.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.04%)</title><rect x="814.8" y="517" width="0.4" height="15.0" fill="rgb(250,17,3)" rx="2" ry="2" />
<text  x="817.77" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="94.0" y="261" width="0.8" height="15.0" fill="rgb(245,201,46)" rx="2" ry="2" />
<text  x="96.99" y="271.5" ></text>
</g>
<g >
<title>database/sql.ctxDriverPrepare (48 samples, 1.70%)</title><rect x="706.1" y="341" width="20.1" height="15.0" fill="rgb(240,172,32)" rx="2" ry="2" />
<text  x="709.13" y="351.5" ></text>
</g>
<g >
<title>runtime.mcall (973 samples, 34.45%)</title><rect x="770.5" y="597" width="406.5" height="15.0" fill="rgb(206,77,48)" rx="2" ry="2" />
<text  x="773.48" y="607.5" >runtime.mcall</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readResultSetHeaderPacket (6 samples, 0.21%)</title><rect x="702.0" y="309" width="2.5" height="15.0" fill="rgb(245,191,22)" rx="2" ry="2" />
<text  x="704.95" y="319.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.04%)</title><rect x="758.4" y="245" width="0.4" height="15.0" fill="rgb(228,0,16)" rx="2" ry="2" />
<text  x="761.36" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall6 (23 samples, 0.81%)</title><rect x="10.0" y="533" width="9.6" height="15.0" fill="rgb(213,43,39)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/buffer.(*Buffer).Bytes (1 samples, 0.04%)</title><rect x="53.9" y="485" width="0.4" height="15.0" fill="rgb(242,67,49)" rx="2" ry="2" />
<text  x="56.87" y="495.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.addFields (2 samples, 0.07%)</title><rect x="83.1" y="453" width="0.9" height="15.0" fill="rgb(243,32,0)" rx="2" ry="2" />
<text  x="86.12" y="463.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlRows).Columns (1 samples, 0.04%)</title><rect x="674.0" y="373" width="0.4" height="15.0" fill="rgb(243,144,21)" rx="2" ry="2" />
<text  x="676.96" y="383.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.consoleEncoder.EncodeEntry (1 samples, 0.04%)</title><rect x="699.0" y="405" width="0.4" height="15.0" fill="rgb(214,68,48)" rx="2" ry="2" />
<text  x="702.03" y="415.5" ></text>
</g>
<g >
<title>runtime.libcCall (6 samples, 0.21%)</title><rect x="1027.9" y="469" width="2.5" height="15.0" fill="rgb(215,182,25)" rx="2" ry="2" />
<text  x="1030.88" y="479.5" ></text>
</g>
<g >
<title>path/filepath.walkSymlinks (21 samples, 0.74%)</title><rect x="19.6" y="565" width="8.8" height="15.0" fill="rgb(223,129,11)" rx="2" ry="2" />
<text  x="22.61" y="575.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).EncodeEntry (1 samples, 0.04%)</title><rect x="695.7" y="405" width="0.4" height="15.0" fill="rgb(250,156,47)" rx="2" ry="2" />
<text  x="698.69" y="415.5" ></text>
</g>
<g >
<title>syscall.rawSyscall (1 samples, 0.04%)</title><rect x="90.6" y="181" width="0.5" height="15.0" fill="rgb(238,20,44)" rx="2" ry="2" />
<text  x="93.64" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (47 samples, 1.66%)</title><rect x="390.2" y="229" width="19.7" height="15.0" fill="rgb(227,33,41)" rx="2" ry="2" />
<text  x="393.24" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.04%)</title><rect x="761.3" y="309" width="0.4" height="15.0" fill="rgb(226,112,23)" rx="2" ry="2" />
<text  x="764.29" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="678.6" y="341" width="0.4" height="15.0" fill="rgb(240,190,24)" rx="2" ry="2" />
<text  x="681.56" y="351.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketUint32 (10 samples, 0.35%)</title><rect x="674.4" y="325" width="4.2" height="15.0" fill="rgb(229,152,38)" rx="2" ry="2" />
<text  x="677.38" y="335.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketUint32 (29 samples, 1.03%)</title><rect x="726.2" y="357" width="12.1" height="15.0" fill="rgb(212,189,31)" rx="2" ry="2" />
<text  x="729.19" y="367.5" ></text>
</g>
<g >
<title>syscall.read (313 samples, 11.08%)</title><rect x="258.6" y="181" width="130.8" height="15.0" fill="rgb(242,121,44)" rx="2" ry="2" />
<text  x="261.62" y="191.5" >syscall.read</text>
</g>
<g >
<title>github.com/natefinch/lumberjack.(*Logger).Write (65 samples, 2.30%)</title><rect x="54.3" y="469" width="27.2" height="15.0" fill="rgb(222,166,2)" rx="2" ry="2" />
<text  x="57.29" y="479.5" >g..</text>
</g>
<g >
<title>net/http.(*response).write (3 samples, 0.11%)</title><rect x="762.5" y="389" width="1.3" height="15.0" fill="rgb(237,66,45)" rx="2" ry="2" />
<text  x="765.54" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readResultSetHeaderPacket (224 samples, 7.93%)</title><rect x="94.8" y="293" width="93.6" height="15.0" fill="rgb(246,105,4)" rx="2" ry="2" />
<text  x="97.82" y="303.5" >github.com/..</text>
</g>
<g >
<title>database/sql.(*DB).queryDC.func2 (48 samples, 1.70%)</title><rect x="706.1" y="357" width="20.1" height="15.0" fill="rgb(216,49,45)" rx="2" ry="2" />
<text  x="709.13" y="367.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.04%)</title><rect x="758.4" y="229" width="0.4" height="15.0" fill="rgb(218,89,44)" rx="2" ry="2" />
<text  x="761.36" y="239.5" ></text>
</g>
<g >
<title>syscall.write (6 samples, 0.21%)</title><rect x="751.3" y="373" width="2.5" height="15.0" fill="rgb(213,57,23)" rx="2" ry="2" />
<text  x="754.26" y="383.5" ></text>
</g>
<g >
<title>github.com/fsnotify/fsnotify.(*Watcher).read (23 samples, 0.81%)</title><rect x="10.0" y="581" width="9.6" height="15.0" fill="rgb(246,151,26)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>syscall.Write (65 samples, 2.30%)</title><rect x="54.3" y="437" width="27.2" height="15.0" fill="rgb(243,228,46)" rx="2" ry="2" />
<text  x="57.29" y="447.5" >s..</text>
</g>
<g >
<title>bluebell/logic.GetPostList (1,600 samples, 56.66%)</title><rect x="87.3" y="485" width="668.6" height="15.0" fill="rgb(254,196,36)" rx="2" ry="2" />
<text  x="90.30" y="495.5" >bluebell/logic.GetPostList</text>
</g>
<g >
<title>database/sql.(*Rows).Scan (1 samples, 0.04%)</title><rect x="739.1" y="421" width="0.5" height="15.0" fill="rgb(235,110,45)" rx="2" ry="2" />
<text  x="742.14" y="431.5" ></text>
</g>
<g >
<title>syscall.Write (4 samples, 0.14%)</title><rect x="84.0" y="437" width="1.6" height="15.0" fill="rgb(245,92,47)" rx="2" ry="2" />
<text  x="86.96" y="447.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).fill (1 samples, 0.04%)</title><rect x="701.1" y="309" width="0.4" height="15.0" fill="rgb(216,209,43)" rx="2" ry="2" />
<text  x="704.12" y="319.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.systemClock.Now (1 samples, 0.04%)</title><rect x="52.6" y="485" width="0.4" height="15.0" fill="rgb(216,159,46)" rx="2" ry="2" />
<text  x="55.62" y="495.5" ></text>
</g>
<g >
<title>runtime.gcDrain (6 samples, 0.21%)</title><rect x="768.0" y="549" width="2.5" height="15.0" fill="rgb(247,151,37)" rx="2" ry="2" />
<text  x="770.97" y="559.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.04%)</title><rect x="769.2" y="469" width="0.4" height="15.0" fill="rgb(233,143,52)" rx="2" ry="2" />
<text  x="772.23" y="479.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="52.6" y="469" width="0.4" height="15.0" fill="rgb(215,161,20)" rx="2" ry="2" />
<text  x="55.62" y="479.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).PrepareContext (587 samples, 20.79%)</title><rect x="257.8" y="309" width="245.3" height="15.0" fill="rgb(249,222,28)" rx="2" ry="2" />
<text  x="260.78" y="319.5" >github.com/go-sql-driver/mysql.(..</text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.04%)</title><rect x="781.3" y="549" width="0.5" height="15.0" fill="rgb(245,92,21)" rx="2" ry="2" />
<text  x="784.35" y="559.5" ></text>
</g>
<g >
<title>runtime.findrunnable (921 samples, 32.61%)</title><rect x="783.0" y="549" width="384.9" height="15.0" fill="rgb(246,108,6)" rx="2" ry="2" />
<text  x="786.02" y="559.5" >runtime.findrunnable</text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.04%)</title><rect x="753.8" y="373" width="0.4" height="15.0" fill="rgb(241,181,29)" rx="2" ry="2" />
<text  x="756.77" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (18 samples, 0.64%)</title><rect x="1168.3" y="469" width="7.5" height="15.0" fill="rgb(209,115,2)" rx="2" ry="2" />
<text  x="1171.27" y="479.5" ></text>
</g>
<g >
<title>syscall.getsockname (3 samples, 0.11%)</title><rect x="34.2" y="485" width="1.3" height="15.0" fill="rgb(251,3,11)" rx="2" ry="2" />
<text  x="37.24" y="495.5" ></text>
</g>
<g >
<title>runtime.stopm (10 samples, 0.35%)</title><rect x="776.7" y="533" width="4.2" height="15.0" fill="rgb(227,205,16)" rx="2" ry="2" />
<text  x="779.75" y="543.5" ></text>
</g>
<g >
<title>time.nextStdChunk (1 samples, 0.04%)</title><rect x="699.0" y="325" width="0.4" height="15.0" fill="rgb(209,128,5)" rx="2" ry="2" />
<text  x="702.03" y="335.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve.func1 (15 samples, 0.53%)</title><rect x="40.9" y="581" width="6.3" height="15.0" fill="rgb(209,216,7)" rx="2" ry="2" />
<text  x="43.92" y="591.5" ></text>
</g>
<g >
<title>runtime.runqsteal (4 samples, 0.14%)</title><rect x="775.1" y="517" width="1.6" height="15.0" fill="rgb(230,209,32)" rx="2" ry="2" />
<text  x="778.08" y="527.5" ></text>
</g>
<g >
<title>net.(*conn).Read (6 samples, 0.21%)</title><rect x="702.0" y="245" width="2.5" height="15.0" fill="rgb(246,57,2)" rx="2" ry="2" />
<text  x="704.95" y="255.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="753.3" y="341" width="0.5" height="15.0" fill="rgb(239,212,18)" rx="2" ry="2" />
<text  x="756.35" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="738.7" y="309" width="0.4" height="15.0" fill="rgb(245,207,18)" rx="2" ry="2" />
<text  x="741.73" y="319.5" ></text>
</g>
<g >
<title>syscall.setsockopt (2 samples, 0.07%)</title><rect x="35.9" y="485" width="0.8" height="15.0" fill="rgb(222,152,33)" rx="2" ry="2" />
<text  x="38.91" y="495.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (2 samples, 0.07%)</title><rect x="757.1" y="197" width="0.8" height="15.0" fill="rgb(236,13,26)" rx="2" ry="2" />
<text  x="760.11" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.07%)</title><rect x="86.5" y="405" width="0.8" height="15.0" fill="rgb(245,172,21)" rx="2" ry="2" />
<text  x="89.47" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeTimeLayout (1 samples, 0.04%)</title><rect x="699.0" y="373" width="0.4" height="15.0" fill="rgb(248,88,2)" rx="2" ry="2" />
<text  x="702.03" y="383.5" ></text>
</g>
<g >
<title>net.newTCPConn (4 samples, 0.14%)</title><rect x="36.7" y="533" width="1.7" height="15.0" fill="rgb(234,226,49)" rx="2" ry="2" />
<text  x="39.74" y="543.5" ></text>
</g>
<g >
<title>syscall.Read (224 samples, 7.93%)</title><rect x="94.8" y="197" width="93.6" height="15.0" fill="rgb(206,86,35)" rx="2" ry="2" />
<text  x="97.82" y="207.5" >syscall.Read</text>
</g>
<g >
<title>runtime.startm (13 samples, 0.46%)</title><rect x="1181.2" y="533" width="5.5" height="15.0" fill="rgb(207,21,34)" rx="2" ry="2" />
<text  x="1184.23" y="543.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (1 samples, 0.04%)</title><rect x="85.6" y="405" width="0.4" height="15.0" fill="rgb(224,165,27)" rx="2" ry="2" />
<text  x="88.63" y="415.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.07%)</title><rect x="86.5" y="357" width="0.8" height="15.0" fill="rgb(245,155,19)" rx="2" ry="2" />
<text  x="89.47" y="367.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.04%)</title><rect x="52.6" y="437" width="0.4" height="15.0" fill="rgb(229,4,18)" rx="2" ry="2" />
<text  x="55.62" y="447.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="684.0" y="373" width="0.4" height="15.0" fill="rgb(226,217,6)" rx="2" ry="2" />
<text  x="686.99" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.04%)</title><rect x="252.4" y="325" width="0.4" height="15.0" fill="rgb(251,43,41)" rx="2" ry="2" />
<text  x="255.35" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1176.6" y="517" width="0.4" height="15.0" fill="rgb(245,199,3)" rx="2" ry="2" />
<text  x="1179.63" y="527.5" ></text>
</g>
<g >
<title>net.setKeepAlivePeriod (2 samples, 0.07%)</title><rect x="35.9" y="517" width="0.8" height="15.0" fill="rgb(245,99,0)" rx="2" ry="2" />
<text  x="38.91" y="527.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.04%)</title><rect x="757.9" y="197" width="0.5" height="15.0" fill="rgb(216,125,44)" rx="2" ry="2" />
<text  x="760.95" y="207.5" ></text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.04%)</title><rect x="738.7" y="325" width="0.4" height="15.0" fill="rgb(220,13,20)" rx="2" ry="2" />
<text  x="741.73" y="335.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.(*DB).Select (95 samples, 3.36%)</title><rect x="700.3" y="469" width="39.7" height="15.0" fill="rgb(231,26,31)" rx="2" ry="2" />
<text  x="703.28" y="479.5" >git..</text>
</g>
<g >
<title>net/http.(*conn).hijacked (1 samples, 0.04%)</title><rect x="46.8" y="565" width="0.4" height="15.0" fill="rgb(246,4,18)" rx="2" ry="2" />
<text  x="49.77" y="575.5" ></text>
</g>
<g >
<title>syscall.CloseOnExec (6 samples, 0.21%)</title><rect x="31.7" y="485" width="2.5" height="15.0" fill="rgb(223,35,22)" rx="2" ry="2" />
<text  x="34.73" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Accept (14 samples, 0.50%)</title><rect x="28.4" y="501" width="5.8" height="15.0" fill="rgb(254,122,0)" rx="2" ry="2" />
<text  x="31.39" y="511.5" ></text>
</g>
<g >
<title>os.(*File).write (4 samples, 0.14%)</title><rect x="84.0" y="453" width="1.6" height="15.0" fill="rgb(213,155,39)" rx="2" ry="2" />
<text  x="86.96" y="463.5" ></text>
</g>
<g >
<title>os.(*File).write (6 samples, 0.21%)</title><rect x="751.3" y="405" width="2.5" height="15.0" fill="rgb(233,66,52)" rx="2" ry="2" />
<text  x="754.26" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).Error (36 samples, 1.27%)</title><rect x="684.8" y="453" width="15.1" height="15.0" fill="rgb(242,27,11)" rx="2" ry="2" />
<text  x="687.82" y="463.5" ></text>
</g>
<g >
<title>syscall.syscall (4 samples, 0.14%)</title><rect x="39.2" y="405" width="1.7" height="15.0" fill="rgb(206,51,8)" rx="2" ry="2" />
<text  x="42.25" y="415.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.(*DB).Get (1,424 samples, 50.42%)</title><rect x="89.8" y="453" width="595.0" height="15.0" fill="rgb(235,169,21)" rx="2" ry="2" />
<text  x="92.81" y="463.5" >github.com/jmoiron/sqlx.(*DB).Get</text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.04%)</title><rect x="783.4" y="533" width="0.5" height="15.0" fill="rgb(218,80,12)" rx="2" ry="2" />
<text  x="786.43" y="543.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.04%)</title><rect x="763.0" y="293" width="0.4" height="15.0" fill="rgb(225,83,21)" rx="2" ry="2" />
<text  x="765.96" y="303.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readPacket (6 samples, 0.21%)</title><rect x="702.0" y="293" width="2.5" height="15.0" fill="rgb(209,66,20)" rx="2" ry="2" />
<text  x="704.95" y="303.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.04%)</title><rect x="86.9" y="245" width="0.4" height="15.0" fill="rgb(235,190,46)" rx="2" ry="2" />
<text  x="89.88" y="255.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (4 samples, 0.14%)</title><rect x="39.2" y="453" width="1.7" height="15.0" fill="rgb(222,87,28)" rx="2" ry="2" />
<text  x="42.25" y="463.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="507.7" y="341" width="0.4" height="15.0" fill="rgb(223,154,2)" rx="2" ry="2" />
<text  x="510.66" y="351.5" ></text>
</g>
<g >
<title>database/sql.(*DB).QueryContext (62 samples, 2.20%)</title><rect x="700.3" y="421" width="25.9" height="15.0" fill="rgb(231,163,19)" rx="2" ry="2" />
<text  x="703.28" y="431.5" >d..</text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1167.0" y="469" width="0.4" height="15.0" fill="rgb(216,87,7)" rx="2" ry="2" />
<text  x="1170.02" y="479.5" ></text>
</g>
<g >
<title>syscall.Read (2 samples, 0.07%)</title><rect x="765.0" y="549" width="0.9" height="15.0" fill="rgb(218,153,49)" rx="2" ry="2" />
<text  x="768.05" y="559.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="763.0" y="325" width="0.4" height="15.0" fill="rgb(239,196,35)" rx="2" ry="2" />
<text  x="765.96" y="335.5" ></text>
</g>
<g >
<title>database/sql.(*DB).queryDC (58 samples, 2.05%)</title><rect x="702.0" y="389" width="24.2" height="15.0" fill="rgb(209,23,27)" rx="2" ry="2" />
<text  x="704.95" y="399.5" >d..</text>
</g>
<g >
<title>net.(*netFD).Write (6 samples, 0.21%)</title><rect x="48.0" y="517" width="2.5" height="15.0" fill="rgb(212,188,37)" rx="2" ry="2" />
<text  x="51.02" y="527.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.04%)</title><rect x="769.2" y="421" width="0.4" height="15.0" fill="rgb(235,66,21)" rx="2" ry="2" />
<text  x="772.23" y="431.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.namedValueToValue (6 samples, 0.21%)</title><rect x="254.4" y="293" width="2.5" height="15.0" fill="rgb(208,150,34)" rx="2" ry="2" />
<text  x="257.44" y="303.5" ></text>
</g>
<g >
<title>runtime.handoff (1 samples, 0.04%)</title><rect x="768.0" y="517" width="0.4" height="15.0" fill="rgb(211,35,44)" rx="2" ry="2" />
<text  x="770.97" y="527.5" ></text>
</g>
<g >
<title>database/sql.(*DB).conn (6 samples, 0.21%)</title><rect x="90.2" y="373" width="2.5" height="15.0" fill="rgb(244,93,18)" rx="2" ry="2" />
<text  x="93.23" y="383.5" ></text>
</g>
<g >
<title>syscall.syscall (46 samples, 1.63%)</title><rect x="390.7" y="181" width="19.2" height="15.0" fill="rgb(243,99,10)" rx="2" ry="2" />
<text  x="393.66" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.14%)</title><rect x="255.3" y="261" width="1.6" height="15.0" fill="rgb(252,63,54)" rx="2" ry="2" />
<text  x="258.28" y="271.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).nextLocked (3 samples, 0.11%)</title><rect x="679.0" y="341" width="1.2" height="15.0" fill="rgb(221,29,37)" rx="2" ry="2" />
<text  x="681.97" y="351.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).readNext (13 samples, 0.46%)</title><rect x="720.8" y="261" width="5.4" height="15.0" fill="rgb(216,13,26)" rx="2" ry="2" />
<text  x="723.76" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (9 samples, 0.32%)</title><rect x="776.7" y="469" width="3.8" height="15.0" fill="rgb(214,193,42)" rx="2" ry="2" />
<text  x="779.75" y="479.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx/reflectx.(*Mapper).TraversalsByNameFunc (1 samples, 0.04%)</title><rect x="684.0" y="389" width="0.4" height="15.0" fill="rgb(240,176,12)" rx="2" ry="2" />
<text  x="686.99" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readPacket (13 samples, 0.46%)</title><rect x="720.8" y="277" width="5.4" height="15.0" fill="rgb(240,216,29)" rx="2" ry="2" />
<text  x="723.76" y="287.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.04%)</title><rect x="767.6" y="581" width="0.4" height="15.0" fill="rgb(238,26,37)" rx="2" ry="2" />
<text  x="770.56" y="591.5" ></text>
</g>
<g >
<title>runtime.netpollgoready (1 samples, 0.04%)</title><rect x="50.5" y="517" width="0.4" height="15.0" fill="rgb(240,70,42)" rx="2" ry="2" />
<text  x="53.53" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="50.5" y="485" width="0.4" height="15.0" fill="rgb(242,202,19)" rx="2" ry="2" />
<text  x="53.53" y="495.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.04%)</title><rect x="35.5" y="437" width="0.4" height="15.0" fill="rgb(211,41,11)" rx="2" ry="2" />
<text  x="38.49" y="447.5" ></text>
</g>
<g >
<title>database/sql.(*DB).putConnDBLocked (1 samples, 0.04%)</title><rect x="506.4" y="341" width="0.4" height="15.0" fill="rgb(252,228,29)" rx="2" ry="2" />
<text  x="509.40" y="351.5" ></text>
</g>
<g >
<title>runtime.mPark (326 samples, 11.54%)</title><rect x="1031.2" y="517" width="136.2" height="15.0" fill="rgb(246,147,10)" rx="2" ry="2" />
<text  x="1034.22" y="527.5" >runtime.mPark</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*binaryRows).readRow (2 samples, 0.07%)</title><rect x="738.3" y="341" width="0.8" height="15.0" fill="rgb(217,62,14)" rx="2" ry="2" />
<text  x="741.31" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="505.1" y="389" width="0.5" height="15.0" fill="rgb(236,174,37)" rx="2" ry="2" />
<text  x="508.15" y="399.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="186.3" y="85" width="0.4" height="15.0" fill="rgb(206,116,45)" rx="2" ry="2" />
<text  x="189.33" y="95.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.addFields (1 samples, 0.04%)</title><rect x="695.7" y="389" width="0.4" height="15.0" fill="rgb(219,220,16)" rx="2" ry="2" />
<text  x="698.69" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketStr (35 samples, 1.24%)</title><rect x="706.1" y="293" width="14.7" height="15.0" fill="rgb(209,105,49)" rx="2" ry="2" />
<text  x="709.13" y="303.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.04%)</title><rect x="50.5" y="469" width="0.4" height="15.0" fill="rgb(248,49,49)" rx="2" ry="2" />
<text  x="53.53" y="479.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.04%)</title><rect x="762.1" y="405" width="0.4" height="15.0" fill="rgb(219,9,21)" rx="2" ry="2" />
<text  x="765.12" y="415.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="678.1" y="213" width="0.5" height="15.0" fill="rgb(244,211,15)" rx="2" ry="2" />
<text  x="681.14" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.04%)</title><rect x="769.2" y="517" width="0.4" height="15.0" fill="rgb(226,79,51)" rx="2" ry="2" />
<text  x="772.23" y="527.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.04%)</title><rect x="252.8" y="341" width="0.4" height="15.0" fill="rgb(253,174,30)" rx="2" ry="2" />
<text  x="255.77" y="351.5" ></text>
</g>
<g >
<title>encoding/json.compact (3 samples, 0.11%)</title><rect x="759.2" y="181" width="1.3" height="15.0" fill="rgb(228,110,38)" rx="2" ry="2" />
<text  x="762.20" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (29 samples, 1.03%)</title><rect x="726.2" y="309" width="12.1" height="15.0" fill="rgb(219,198,53)" rx="2" ry="2" />
<text  x="729.19" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (19 samples, 0.67%)</title><rect x="1168.3" y="501" width="7.9" height="15.0" fill="rgb(206,73,12)" rx="2" ry="2" />
<text  x="1171.27" y="511.5" ></text>
</g>
<g >
<title>net.(*conn).Read (223 samples, 7.90%)</title><rect x="409.9" y="213" width="93.2" height="15.0" fill="rgb(212,45,47)" rx="2" ry="2" />
<text  x="412.88" y="223.5" >net.(*conn)..</text>
</g>
<g >
<title>github.com/jmoiron/sqlx.Get (1,424 samples, 50.42%)</title><rect x="89.8" y="437" width="595.0" height="15.0" fill="rgb(243,103,37)" rx="2" ry="2" />
<text  x="92.81" y="447.5" >github.com/jmoiron/sqlx.Get</text>
</g>
<g >
<title>database/sql.(*Rows).Close (402 samples, 14.24%)</title><rect x="505.6" y="405" width="167.9" height="15.0" fill="rgb(237,37,10)" rx="2" ry="2" />
<text  x="508.57" y="415.5" >database/sql.(*Rows)...</text>
</g>
<g >
<title>runtime.libcCall (169 samples, 5.98%)</title><rect x="950.6" y="501" width="70.6" height="15.0" fill="rgb(240,11,10)" rx="2" ry="2" />
<text  x="953.57" y="511.5" >runtime..</text>
</g>
<g >
<title>syscall.SetNonblock (1 samples, 0.04%)</title><rect x="31.3" y="469" width="0.4" height="15.0" fill="rgb(238,189,16)" rx="2" ry="2" />
<text  x="34.31" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.04%)</title><rect x="767.6" y="469" width="0.4" height="15.0" fill="rgb(220,20,17)" rx="2" ry="2" />
<text  x="770.56" y="479.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (72 samples, 2.55%)</title><rect x="784.7" y="533" width="30.1" height="15.0" fill="rgb(226,65,45)" rx="2" ry="2" />
<text  x="787.69" y="543.5" >ru..</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readUntilEOF (1 samples, 0.04%)</title><rect x="258.2" y="277" width="0.4" height="15.0" fill="rgb(218,119,51)" rx="2" ry="2" />
<text  x="261.20" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="252.4" y="293" width="0.4" height="15.0" fill="rgb(220,34,14)" rx="2" ry="2" />
<text  x="255.35" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="770.5" y="501" width="0.4" height="15.0" fill="rgb(216,191,16)" rx="2" ry="2" />
<text  x="773.48" y="511.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (13 samples, 0.46%)</title><rect x="1181.2" y="485" width="5.5" height="15.0" fill="rgb(205,180,47)" rx="2" ry="2" />
<text  x="1184.23" y="495.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.04%)</title><rect x="758.4" y="213" width="0.4" height="15.0" fill="rgb(237,35,34)" rx="2" ry="2" />
<text  x="761.36" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (324 samples, 11.47%)</title><rect x="1031.6" y="469" width="135.4" height="15.0" fill="rgb(249,109,50)" rx="2" ry="2" />
<text  x="1034.64" y="479.5" >runtime.pthread_c..</text>
</g>
<g >
<title>database/sql.(*Rows).close (11 samples, 0.39%)</title><rect x="674.4" y="373" width="4.6" height="15.0" fill="rgb(248,122,5)" rx="2" ry="2" />
<text  x="677.38" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.04%)</title><rect x="1030.8" y="501" width="0.4" height="15.0" fill="rgb(227,172,11)" rx="2" ry="2" />
<text  x="1033.80" y="511.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.04%)</title><rect x="768.4" y="533" width="0.4" height="15.0" fill="rgb(208,20,36)" rx="2" ry="2" />
<text  x="771.39" y="543.5" ></text>
</g>
<g >
<title>syscall.write (65 samples, 2.30%)</title><rect x="54.3" y="421" width="27.2" height="15.0" fill="rgb(244,131,40)" rx="2" ry="2" />
<text  x="57.29" y="431.5" >s..</text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.04%)</title><rect x="35.5" y="485" width="0.4" height="15.0" fill="rgb(235,206,31)" rx="2" ry="2" />
<text  x="38.49" y="495.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="389.0" y="149" width="0.4" height="15.0" fill="rgb(224,176,41)" rx="2" ry="2" />
<text  x="391.99" y="159.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialTCP (3 samples, 0.11%)</title><rect x="90.2" y="293" width="1.3" height="15.0" fill="rgb(248,208,36)" rx="2" ry="2" />
<text  x="93.23" y="303.5" ></text>
</g>
<g >
<title>database/sql.(*driverStmt).Close (10 samples, 0.35%)</title><rect x="674.4" y="357" width="4.2" height="15.0" fill="rgb(229,17,40)" rx="2" ry="2" />
<text  x="677.38" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="763.8" y="325" width="0.4" height="15.0" fill="rgb(237,38,34)" rx="2" ry="2" />
<text  x="766.80" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/sys/unix.kevent (23 samples, 0.81%)</title><rect x="10.0" y="549" width="9.6" height="15.0" fill="rgb(208,189,13)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (152 samples, 5.38%)</title><rect x="188.4" y="277" width="63.5" height="15.0" fill="rgb(245,122,42)" rx="2" ry="2" />
<text  x="191.42" y="287.5" >github..</text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.04%)</title><rect x="682.7" y="357" width="0.5" height="15.0" fill="rgb(251,175,1)" rx="2" ry="2" />
<text  x="685.73" y="367.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.04%)</title><rect x="757.9" y="213" width="0.5" height="15.0" fill="rgb(215,142,16)" rx="2" ry="2" />
<text  x="760.95" y="223.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.isScannable (1 samples, 0.04%)</title><rect x="683.2" y="405" width="0.4" height="15.0" fill="rgb(230,190,2)" rx="2" ry="2" />
<text  x="686.15" y="415.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).WriteHeaderNow (1 samples, 0.04%)</title><rect x="763.8" y="421" width="0.4" height="15.0" fill="rgb(231,1,27)" rx="2" ry="2" />
<text  x="766.80" y="431.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (6 samples, 0.21%)</title><rect x="48.0" y="565" width="2.5" height="15.0" fill="rgb(208,102,20)" rx="2" ry="2" />
<text  x="51.02" y="575.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.04%)</title><rect x="700.7" y="261" width="0.4" height="15.0" fill="rgb(216,36,49)" rx="2" ry="2" />
<text  x="703.70" y="271.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="701.1" y="229" width="0.4" height="15.0" fill="rgb(250,229,17)" rx="2" ry="2" />
<text  x="704.12" y="239.5" ></text>
</g>
<g >
<title>syscall.write (10 samples, 0.35%)</title><rect x="674.4" y="245" width="4.2" height="15.0" fill="rgb(249,19,34)" rx="2" ry="2" />
<text  x="677.38" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="89.0" y="421" width="0.8" height="15.0" fill="rgb(211,73,52)" rx="2" ry="2" />
<text  x="91.97" y="431.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.04%)</title><rect x="701.5" y="325" width="0.5" height="15.0" fill="rgb(247,21,9)" rx="2" ry="2" />
<text  x="704.54" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="86.0" y="517" width="0.5" height="15.0" fill="rgb(205,89,44)" rx="2" ry="2" />
<text  x="89.05" y="527.5" ></text>
</g>
<g >
<title>bluebell/dao/mysql.GetUserById (3 samples, 0.11%)</title><rect x="88.6" y="453" width="1.2" height="15.0" fill="rgb(218,190,35)" rx="2" ry="2" />
<text  x="91.56" y="463.5" ></text>
</g>
<g >
<title>syscall.Read (4 samples, 0.14%)</title><rect x="39.2" y="437" width="1.7" height="15.0" fill="rgb(254,162,38)" rx="2" ry="2" />
<text  x="42.25" y="447.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Close (11 samples, 0.39%)</title><rect x="674.4" y="389" width="4.6" height="15.0" fill="rgb(221,19,6)" rx="2" ry="2" />
<text  x="677.38" y="399.5" ></text>
</g>
<g >
<title>os.Lstat (21 samples, 0.74%)</title><rect x="19.6" y="549" width="8.8" height="15.0" fill="rgb(223,3,25)" rx="2" ry="2" />
<text  x="22.61" y="559.5" ></text>
</g>
<g >
<title>runtime.pollWork (8 samples, 0.28%)</title><rect x="1177.9" y="549" width="3.3" height="15.0" fill="rgb(227,102,38)" rx="2" ry="2" />
<text  x="1180.88" y="559.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.addFields (2 samples, 0.07%)</title><rect x="754.2" y="389" width="0.8" height="15.0" fill="rgb(215,193,40)" rx="2" ry="2" />
<text  x="757.19" y="399.5" ></text>
</g>
<g >
<title>syscall.syscall (13 samples, 0.46%)</title><rect x="720.8" y="165" width="5.4" height="15.0" fill="rgb(214,64,29)" rx="2" ry="2" />
<text  x="723.76" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="763.8" y="341" width="0.4" height="15.0" fill="rgb(227,9,17)" rx="2" ry="2" />
<text  x="766.80" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="680.2" y="309" width="0.4" height="15.0" fill="rgb(216,159,25)" rx="2" ry="2" />
<text  x="683.23" y="319.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write (4 samples, 0.14%)</title><rect x="84.0" y="469" width="1.6" height="15.0" fill="rgb(253,210,1)" rx="2" ry="2" />
<text  x="86.96" y="479.5" ></text>
</g>
<g >
<title>bluebell/logger.GinLogger.func1 (83 samples, 2.94%)</title><rect x="51.8" y="533" width="34.7" height="15.0" fill="rgb(205,89,48)" rx="2" ry="2" />
<text  x="54.78" y="543.5" >bl..</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.connCheck (34 samples, 1.20%)</title><rect x="706.1" y="261" width="14.2" height="15.0" fill="rgb(251,217,25)" rx="2" ry="2" />
<text  x="709.13" y="271.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.mapper (1 samples, 0.04%)</title><rect x="683.2" y="389" width="0.4" height="15.0" fill="rgb(225,142,25)" rx="2" ry="2" />
<text  x="686.15" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readUntilEOF (1 samples, 0.04%)</title><rect x="672.3" y="325" width="0.4" height="15.0" fill="rgb(209,34,53)" rx="2" ry="2" />
<text  x="675.29" y="335.5" ></text>
</g>
<g >
<title>runtime.write (1 samples, 0.04%)</title><rect x="780.9" y="533" width="0.4" height="15.0" fill="rgb(219,5,50)" rx="2" ry="2" />
<text  x="783.93" y="543.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.04%)</title><rect x="739.1" y="389" width="0.5" height="15.0" fill="rgb(217,213,40)" rx="2" ry="2" />
<text  x="742.14" y="399.5" ></text>
</g>
<g >
<title>syscall.setsockopt (4 samples, 0.14%)</title><rect x="36.7" y="485" width="1.7" height="15.0" fill="rgb(234,82,48)" rx="2" ry="2" />
<text  x="39.74" y="495.5" ></text>
</g>
<g >
<title>syscall.write (4 samples, 0.14%)</title><rect x="704.5" y="229" width="1.6" height="15.0" fill="rgb(233,63,50)" rx="2" ry="2" />
<text  x="707.46" y="239.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="749.2" y="341" width="0.4" height="15.0" fill="rgb(215,112,34)" rx="2" ry="2" />
<text  x="752.17" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="668.1" y="229" width="0.4" height="15.0" fill="rgb(240,135,50)" rx="2" ry="2" />
<text  x="671.11" y="239.5" ></text>
</g>
<g >
<title>syscall.syscall (151 samples, 5.35%)</title><rect x="188.8" y="197" width="63.1" height="15.0" fill="rgb(229,78,36)" rx="2" ry="2" />
<text  x="191.84" y="207.5" >syscal..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="51.8" y="469" width="0.4" height="15.0" fill="rgb(248,109,16)" rx="2" ry="2" />
<text  x="54.78" y="479.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.04%)</title><rect x="769.2" y="501" width="0.4" height="15.0" fill="rgb(211,172,39)" rx="2" ry="2" />
<text  x="772.23" y="511.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (13 samples, 0.46%)</title><rect x="1181.2" y="581" width="5.5" height="15.0" fill="rgb(233,209,27)" rx="2" ry="2" />
<text  x="1184.23" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.04%)</title><rect x="761.3" y="325" width="0.4" height="15.0" fill="rgb(240,120,19)" rx="2" ry="2" />
<text  x="764.29" y="335.5" ></text>
</g>
<g >
<title>encoding/json.condAddrEncoder.encode (3 samples, 0.11%)</title><rect x="759.2" y="213" width="1.3" height="15.0" fill="rgb(227,205,37)" rx="2" ry="2" />
<text  x="762.20" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="679.8" y="309" width="0.4" height="15.0" fill="rgb(247,4,10)" rx="2" ry="2" />
<text  x="682.81" y="319.5" ></text>
</g>
<g >
<title>syscall.write (151 samples, 5.35%)</title><rect x="188.8" y="213" width="63.1" height="15.0" fill="rgb(242,208,33)" rx="2" ry="2" />
<text  x="191.84" y="223.5" >syscal..</text>
</g>
<g >
<title>syscall.Close (13 samples, 0.46%)</title><rect x="40.9" y="469" width="5.5" height="15.0" fill="rgb(212,67,47)" rx="2" ry="2" />
<text  x="43.92" y="479.5" ></text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.04%)</title><rect x="684.8" y="373" width="0.4" height="15.0" fill="rgb(238,162,12)" rx="2" ry="2" />
<text  x="687.82" y="383.5" ></text>
</g>
<g >
<title>path/filepath.evalSymlinks (21 samples, 0.74%)</title><rect x="19.6" y="581" width="8.8" height="15.0" fill="rgb(219,183,51)" rx="2" ry="2" />
<text  x="22.61" y="591.5" ></text>
</g>
<g >
<title>net.(*conn).Write (152 samples, 5.38%)</title><rect x="188.4" y="261" width="63.5" height="15.0" fill="rgb(230,204,37)" rx="2" ry="2" />
<text  x="191.42" y="271.5" >net.(*..</text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (1 samples, 0.04%)</title><rect x="699.4" y="389" width="0.5" height="15.0" fill="rgb(224,21,9)" rx="2" ry="2" />
<text  x="702.45" y="399.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Columns (2 samples, 0.07%)</title><rect x="673.5" y="389" width="0.9" height="15.0" fill="rgb(241,138,53)" rx="2" ry="2" />
<text  x="676.54" y="399.5" ></text>
</g>
<g >
<title>database/sql.ctxDriverStmtQuery (10 samples, 0.35%)</title><rect x="702.0" y="357" width="4.1" height="15.0" fill="rgb(220,208,39)" rx="2" ry="2" />
<text  x="704.95" y="367.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.04%)</title><rect x="389.4" y="229" width="0.4" height="15.0" fill="rgb(228,68,49)" rx="2" ry="2" />
<text  x="392.41" y="239.5" ></text>
</g>
<g >
<title>time.appendInt (1 samples, 0.04%)</title><rect x="85.6" y="389" width="0.4" height="15.0" fill="rgb(240,170,36)" rx="2" ry="2" />
<text  x="88.63" y="399.5" ></text>
</g>
<g >
<title>net/http.(*conn).close (14 samples, 0.50%)</title><rect x="40.9" y="565" width="5.9" height="15.0" fill="rgb(253,111,51)" rx="2" ry="2" />
<text  x="43.92" y="575.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.04%)</title><rect x="720.3" y="261" width="0.5" height="15.0" fill="rgb(217,103,20)" rx="2" ry="2" />
<text  x="723.34" y="271.5" ></text>
</g>
<g >
<title>syscall.SetNonblock (1 samples, 0.04%)</title><rect x="90.2" y="213" width="0.4" height="15.0" fill="rgb(251,26,27)" rx="2" ry="2" />
<text  x="93.23" y="223.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (3 samples, 0.11%)</title><rect x="759.2" y="229" width="1.3" height="15.0" fill="rgb(226,60,31)" rx="2" ry="2" />
<text  x="762.20" y="239.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (13 samples, 0.46%)</title><rect x="755.9" y="341" width="5.4" height="15.0" fill="rgb(213,50,26)" rx="2" ry="2" />
<text  x="758.86" y="351.5" ></text>
</g>
<g >
<title>runtime.runqgrab (20 samples, 0.71%)</title><rect x="1022.0" y="501" width="8.4" height="15.0" fill="rgb(251,170,49)" rx="2" ry="2" />
<text  x="1025.03" y="511.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).readNext (224 samples, 7.93%)</title><rect x="94.8" y="261" width="93.6" height="15.0" fill="rgb(219,122,15)" rx="2" ry="2" />
<text  x="97.82" y="271.5" >github.com/..</text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.04%)</title><rect x="701.1" y="277" width="0.4" height="15.0" fill="rgb(211,152,43)" rx="2" ry="2" />
<text  x="704.12" y="287.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.04%)</title><rect x="760.5" y="245" width="0.4" height="15.0" fill="rgb(229,4,37)" rx="2" ry="2" />
<text  x="763.45" y="255.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.(*Row).Scan (20 samples, 0.71%)</title><rect x="674.4" y="405" width="8.3" height="15.0" fill="rgb(241,102,11)" rx="2" ry="2" />
<text  x="677.38" y="415.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.04%)</title><rect x="680.2" y="325" width="0.4" height="15.0" fill="rgb(232,186,20)" rx="2" ry="2" />
<text  x="683.23" y="335.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (4 samples, 0.14%)</title><rect x="758.8" y="245" width="1.7" height="15.0" fill="rgb(248,30,47)" rx="2" ry="2" />
<text  x="761.78" y="255.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.04%)</title><rect x="763.4" y="309" width="0.4" height="15.0" fill="rgb(218,81,23)" rx="2" ry="2" />
<text  x="766.38" y="319.5" ></text>
</g>
<g >
<title>runtime.resetspinning (20 samples, 0.71%)</title><rect x="1167.9" y="549" width="8.3" height="15.0" fill="rgb(254,78,48)" rx="2" ry="2" />
<text  x="1170.85" y="559.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx/reflectx.(*Mapper).TraversalsByName (2 samples, 0.07%)</title><rect x="683.6" y="405" width="0.8" height="15.0" fill="rgb(242,94,42)" rx="2" ry="2" />
<text  x="686.57" y="415.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 0.07%)</title><rect x="185.9" y="133" width="0.8" height="15.0" fill="rgb(245,131,4)" rx="2" ry="2" />
<text  x="188.91" y="143.5" ></text>
</g>
<g >
<title>runtime.typedslicecopy (2 samples, 0.07%)</title><rect x="91.9" y="357" width="0.8" height="15.0" fill="rgb(227,107,2)" rx="2" ry="2" />
<text  x="94.90" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).safeAddString (1 samples, 0.04%)</title><rect x="82.7" y="421" width="0.4" height="15.0" fill="rgb(251,31,42)" rx="2" ry="2" />
<text  x="85.71" y="431.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.Select (95 samples, 3.36%)</title><rect x="700.3" y="453" width="39.7" height="15.0" fill="rgb(238,166,10)" rx="2" ry="2" />
<text  x="703.28" y="463.5" >git..</text>
</g>
<g >
<title>runtime.gosched_m (1 samples, 0.04%)</title><rect x="781.3" y="581" width="0.5" height="15.0" fill="rgb(215,142,7)" rx="2" ry="2" />
<text  x="784.35" y="591.5" ></text>
</g>
<g >
<title>runtime.gorecover (1 samples, 0.04%)</title><rect x="750.8" y="341" width="0.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="753.84" y="351.5" ></text>
</g>
<g >
<title>syscall.syscall (4 samples, 0.14%)</title><rect x="84.0" y="405" width="1.6" height="15.0" fill="rgb(218,82,47)" rx="2" ry="2" />
<text  x="86.96" y="415.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (4 samples, 0.14%)</title><rect x="39.2" y="549" width="1.7" height="15.0" fill="rgb(226,196,37)" rx="2" ry="2" />
<text  x="42.25" y="559.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.04%)</title><rect x="699.4" y="357" width="0.5" height="15.0" fill="rgb(217,86,6)" rx="2" ry="2" />
<text  x="702.45" y="367.5" ></text>
</g>
<g >
<title>database/sql.(*DB).putConn (5 samples, 0.18%)</title><rect x="506.0" y="357" width="2.1" height="15.0" fill="rgb(245,98,7)" rx="2" ry="2" />
<text  x="508.98" y="367.5" ></text>
</g>
<g >
<title>runtime.assertE2I (1 samples, 0.04%)</title><rect x="695.7" y="357" width="0.4" height="15.0" fill="rgb(247,57,4)" rx="2" ry="2" />
<text  x="698.69" y="367.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.04%)</title><rect x="770.5" y="533" width="0.4" height="15.0" fill="rgb(240,168,27)" rx="2" ry="2" />
<text  x="773.48" y="543.5" ></text>
</g>
<g >
<title>database/sql.(*DB).queryDC (987 samples, 34.95%)</title><rect x="92.7" y="373" width="412.4" height="15.0" fill="rgb(212,152,34)" rx="2" ry="2" />
<text  x="95.73" y="383.5" >database/sql.(*DB).queryDC</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*CheckedEntry).Write (37 samples, 1.31%)</title><rect x="740.4" y="453" width="15.5" height="15.0" fill="rgb(227,123,50)" rx="2" ry="2" />
<text  x="743.40" y="463.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Render (20 samples, 0.71%)</title><rect x="755.9" y="469" width="8.3" height="15.0" fill="rgb(214,107,42)" rx="2" ry="2" />
<text  x="758.86" y="479.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialSerial (3 samples, 0.11%)</title><rect x="90.2" y="325" width="1.3" height="15.0" fill="rgb(228,141,35)" rx="2" ry="2" />
<text  x="93.23" y="335.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (4 samples, 0.14%)</title><rect x="36.7" y="501" width="1.7" height="15.0" fill="rgb(236,95,47)" rx="2" ry="2" />
<text  x="39.74" y="511.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).fill (223 samples, 7.90%)</title><rect x="409.9" y="229" width="93.2" height="15.0" fill="rgb(236,98,38)" rx="2" ry="2" />
<text  x="412.88" y="239.5" >github.com/..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.04%)</title><rect x="761.3" y="341" width="0.4" height="15.0" fill="rgb(247,204,9)" rx="2" ry="2" />
<text  x="764.29" y="351.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (3 samples, 0.11%)</title><rect x="764.6" y="597" width="1.3" height="15.0" fill="rgb(239,188,4)" rx="2" ry="2" />
<text  x="767.63" y="607.5" ></text>
</g>
<g >
<title>database/sql.ctxDriverQuery (7 samples, 0.25%)</title><rect x="254.0" y="325" width="2.9" height="15.0" fill="rgb(240,128,21)" rx="2" ry="2" />
<text  x="257.02" y="335.5" ></text>
</g>
<g >
<title>syscall.Getsockname (3 samples, 0.11%)</title><rect x="34.2" y="501" width="1.3" height="15.0" fill="rgb(220,224,51)" rx="2" ry="2" />
<text  x="37.24" y="511.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.04%)</title><rect x="682.7" y="341" width="0.5" height="15.0" fill="rgb(232,158,40)" rx="2" ry="2" />
<text  x="685.73" y="351.5" ></text>
</g>
<g >
<title>net.setNoDelay (4 samples, 0.14%)</title><rect x="36.7" y="517" width="1.7" height="15.0" fill="rgb(224,47,41)" rx="2" ry="2" />
<text  x="39.74" y="527.5" ></text>
</g>
<g >
<title>runtime.walltime_trampoline (1 samples, 0.04%)</title><rect x="767.1" y="581" width="0.5" height="15.0" fill="rgb(254,139,19)" rx="2" ry="2" />
<text  x="770.14" y="591.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.04%)</title><rect x="257.4" y="309" width="0.4" height="15.0" fill="rgb(234,92,14)" rx="2" ry="2" />
<text  x="260.37" y="319.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (9 samples, 0.32%)</title><rect x="1177.5" y="581" width="3.7" height="15.0" fill="rgb(213,79,28)" rx="2" ry="2" />
<text  x="1180.46" y="591.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketStr (1 samples, 0.04%)</title><rect x="700.7" y="325" width="0.4" height="15.0" fill="rgb(249,51,24)" rx="2" ry="2" />
<text  x="703.70" y="335.5" ></text>
</g>
<g >
<title>syscall.Read (6 samples, 0.21%)</title><rect x="702.0" y="213" width="2.5" height="15.0" fill="rgb(216,33,21)" rx="2" ry="2" />
<text  x="704.95" y="223.5" ></text>
</g>
<g >
<title>net.(*conn).Close (14 samples, 0.50%)</title><rect x="40.9" y="549" width="5.9" height="15.0" fill="rgb(225,12,31)" rx="2" ry="2" />
<text  x="43.92" y="559.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="186.3" y="117" width="0.4" height="15.0" fill="rgb(245,74,47)" rx="2" ry="2" />
<text  x="189.33" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.04%)</title><rect x="770.1" y="517" width="0.4" height="15.0" fill="rgb(244,19,47)" rx="2" ry="2" />
<text  x="773.06" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="91.5" y="357" width="0.4" height="15.0" fill="rgb(210,43,7)" rx="2" ry="2" />
<text  x="94.48" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).addKey (1 samples, 0.04%)</title><rect x="754.6" y="325" width="0.4" height="15.0" fill="rgb(221,0,5)" rx="2" ry="2" />
<text  x="757.60" y="335.5" ></text>
</g>
<g >
<title>database/sql.(*driverStmt).Close (29 samples, 1.03%)</title><rect x="726.2" y="389" width="12.1" height="15.0" fill="rgb(208,24,27)" rx="2" ry="2" />
<text  x="729.19" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (4 samples, 0.14%)</title><rect x="704.5" y="293" width="1.6" height="15.0" fill="rgb(212,146,3)" rx="2" ry="2" />
<text  x="707.46" y="303.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (1 samples, 0.04%)</title><rect x="38.4" y="581" width="0.4" height="15.0" fill="rgb(227,7,2)" rx="2" ry="2" />
<text  x="41.41" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.04%)</title><rect x="738.7" y="277" width="0.4" height="15.0" fill="rgb(215,25,41)" rx="2" ry="2" />
<text  x="741.73" y="287.5" ></text>
</g>
<g >
<title>net.(*rawConn).Read (34 samples, 1.20%)</title><rect x="706.1" y="245" width="14.2" height="15.0" fill="rgb(222,64,37)" rx="2" ry="2" />
<text  x="709.13" y="255.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).readPrepareResultPacket (223 samples, 7.90%)</title><rect x="409.9" y="277" width="93.2" height="15.0" fill="rgb(252,117,32)" rx="2" ry="2" />
<text  x="412.88" y="287.5" >github.com/..</text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (1 samples, 0.04%)</title><rect x="684.0" y="357" width="0.4" height="15.0" fill="rgb(206,229,33)" rx="2" ry="2" />
<text  x="686.99" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendFloat64 (1 samples, 0.04%)</title><rect x="83.1" y="373" width="0.4" height="15.0" fill="rgb(232,11,43)" rx="2" ry="2" />
<text  x="86.12" y="383.5" ></text>
</g>
<g >
<title>os.(*File).write (65 samples, 2.30%)</title><rect x="54.3" y="453" width="27.2" height="15.0" fill="rgb(211,153,41)" rx="2" ry="2" />
<text  x="57.29" y="463.5" >o..</text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.04%)</title><rect x="88.6" y="437" width="0.4" height="15.0" fill="rgb(235,178,40)" rx="2" ry="2" />
<text  x="91.56" y="447.5" ></text>
</g>
<g >
<title>encoding/json.condAddrEncoder.encode (4 samples, 0.14%)</title><rect x="756.7" y="245" width="1.7" height="15.0" fill="rgb(229,180,28)" rx="2" ry="2" />
<text  x="759.69" y="255.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (6 samples, 0.21%)</title><rect x="768.0" y="565" width="2.5" height="15.0" fill="rgb(222,224,49)" rx="2" ry="2" />
<text  x="770.97" y="575.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.07%)</title><rect x="86.5" y="325" width="0.8" height="15.0" fill="rgb(251,121,33)" rx="2" ry="2" />
<text  x="89.47" y="335.5" ></text>
</g>
<g >
<title>encoding/json.compact (1 samples, 0.04%)</title><rect x="756.7" y="213" width="0.4" height="15.0" fill="rgb(215,200,14)" rx="2" ry="2" />
<text  x="759.69" y="223.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (224 samples, 7.93%)</title><rect x="94.8" y="213" width="93.6" height="15.0" fill="rgb(230,99,21)" rx="2" ry="2" />
<text  x="97.82" y="223.5" >net.(*netFD..</text>
</g>
<g >
<title>runtime.netpollopen (1 samples, 0.04%)</title><rect x="35.5" y="453" width="0.4" height="15.0" fill="rgb(223,175,16)" rx="2" ry="2" />
<text  x="38.49" y="463.5" ></text>
</g>
<g >
<title>net/http.(*response).WriteHeader (1 samples, 0.04%)</title><rect x="763.8" y="405" width="0.4" height="15.0" fill="rgb(234,161,32)" rx="2" ry="2" />
<text  x="766.80" y="415.5" ></text>
</g>
<g >
<title>main.main.func1 (24 samples, 0.85%)</title><rect x="28.4" y="597" width="10.0" height="15.0" fill="rgb(211,160,27)" rx="2" ry="2" />
<text  x="31.39" y="607.5" ></text>
</g>
<g >
<title>syscall.syscall (2 samples, 0.07%)</title><rect x="765.0" y="517" width="0.9" height="15.0" fill="rgb(220,214,25)" rx="2" ry="2" />
<text  x="768.05" y="527.5" ></text>
</g>
<g >
<title>database/sql.(*DB).queryDC.func1 (10 samples, 0.35%)</title><rect x="253.6" y="341" width="4.2" height="15.0" fill="rgb(244,229,29)" rx="2" ry="2" />
<text  x="256.60" y="351.5" ></text>
</g>
<g >
<title>syscall.syscall (6 samples, 0.21%)</title><rect x="702.0" y="181" width="2.5" height="15.0" fill="rgb(212,4,8)" rx="2" ry="2" />
<text  x="704.95" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (8 samples, 0.28%)</title><rect x="1177.9" y="533" width="3.3" height="15.0" fill="rgb(242,134,23)" rx="2" ry="2" />
<text  x="1180.88" y="543.5" ></text>
</g>
<g >
<title>internal/poll.accept (8 samples, 0.28%)</title><rect x="28.4" y="485" width="3.3" height="15.0" fill="rgb(207,100,33)" rx="2" ry="2" />
<text  x="31.39" y="495.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (29 samples, 1.03%)</title><rect x="726.2" y="341" width="12.1" height="15.0" fill="rgb(221,77,16)" rx="2" ry="2" />
<text  x="729.19" y="351.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.04%)</title><rect x="681.1" y="325" width="0.4" height="15.0" fill="rgb(206,116,9)" rx="2" ry="2" />
<text  x="684.06" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.04%)</title><rect x="720.3" y="245" width="0.5" height="15.0" fill="rgb(230,127,26)" rx="2" ry="2" />
<text  x="723.34" y="255.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.07%)</title><rect x="681.9" y="357" width="0.8" height="15.0" fill="rgb(239,59,43)" rx="2" ry="2" />
<text  x="684.90" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (4 samples, 0.14%)</title><rect x="255.3" y="277" width="1.6" height="15.0" fill="rgb(240,76,5)" rx="2" ry="2" />
<text  x="258.28" y="287.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.Field.AddTo (2 samples, 0.07%)</title><rect x="83.1" y="437" width="0.9" height="15.0" fill="rgb(231,106,19)" rx="2" ry="2" />
<text  x="86.12" y="447.5" ></text>
</g>
<g >
<title>context.WithCancel (1 samples, 0.04%)</title><rect x="38.8" y="581" width="0.4" height="15.0" fill="rgb(223,214,53)" rx="2" ry="2" />
<text  x="41.83" y="591.5" ></text>
</g>
<g >
<title>os.(*File).write (25 samples, 0.89%)</title><rect x="685.2" y="389" width="10.5" height="15.0" fill="rgb(241,167,22)" rx="2" ry="2" />
<text  x="688.24" y="399.5" ></text>
</g>
<g >
<title>runtime.startm (8 samples, 0.28%)</title><rect x="1186.7" y="549" width="3.3" height="15.0" fill="rgb(215,29,5)" rx="2" ry="2" />
<text  x="1189.66" y="559.5" ></text>
</g>
<g >
<title>reflect.Value.Set (1 samples, 0.04%)</title><rect x="680.2" y="357" width="0.4" height="15.0" fill="rgb(215,212,50)" rx="2" ry="2" />
<text  x="683.23" y="367.5" ></text>
</g>
<g >
<title>syscall.write (6 samples, 0.21%)</title><rect x="48.0" y="485" width="2.5" height="15.0" fill="rgb(243,118,15)" rx="2" ry="2" />
<text  x="51.02" y="495.5" ></text>
</g>
<g >
<title>database/sql.(*DB).query (993 samples, 35.16%)</title><rect x="90.2" y="389" width="414.9" height="15.0" fill="rgb(252,87,6)" rx="2" ry="2" />
<text  x="93.23" y="399.5" >database/sql.(*DB).query</text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.04%)</title><rect x="38.4" y="517" width="0.4" height="15.0" fill="rgb(219,25,52)" rx="2" ry="2" />
<text  x="41.41" y="527.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.04%)</title><rect x="680.6" y="357" width="0.5" height="15.0" fill="rgb(220,55,2)" rx="2" ry="2" />
<text  x="683.64" y="367.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (2 samples, 0.07%)</title><rect x="35.9" y="501" width="0.8" height="15.0" fill="rgb(247,126,4)" rx="2" ry="2" />
<text  x="38.91" y="511.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.04%)</title><rect x="185.9" y="101" width="0.4" height="15.0" fill="rgb(209,75,32)" rx="2" ry="2" />
<text  x="188.91" y="111.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="38.8" y="565" width="0.4" height="15.0" fill="rgb(240,41,31)" rx="2" ry="2" />
<text  x="41.83" y="575.5" ></text>
</g>
<g >
<title>runtime.CallersFrames (1 samples, 0.04%)</title><rect x="740.0" y="437" width="0.4" height="15.0" fill="rgb(223,60,48)" rx="2" ry="2" />
<text  x="742.98" y="447.5" ></text>
</g>
<g >
<title>syscall.read (224 samples, 7.93%)</title><rect x="94.8" y="181" width="93.6" height="15.0" fill="rgb(254,186,47)" rx="2" ry="2" />
<text  x="97.82" y="191.5" >syscall.read</text>
</g>
<g >
<title>database/sql.withLock (1 samples, 0.04%)</title><rect x="672.3" y="373" width="0.4" height="15.0" fill="rgb(213,201,0)" rx="2" ry="2" />
<text  x="675.29" y="383.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*stacktrace).Free (1 samples, 0.04%)</title><rect x="52.2" y="485" width="0.4" height="15.0" fill="rgb(211,94,10)" rx="2" ry="2" />
<text  x="55.20" y="495.5" ></text>
</g>
<g >
<title>strconv.AppendFloat (1 samples, 0.04%)</title><rect x="83.1" y="357" width="0.4" height="15.0" fill="rgb(213,217,32)" rx="2" ry="2" />
<text  x="86.12" y="367.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.04%)</title><rect x="764.2" y="581" width="0.4" height="15.0" fill="rgb(253,91,31)" rx="2" ry="2" />
<text  x="767.21" y="591.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write (7 samples, 0.25%)</title><rect x="696.1" y="405" width="2.9" height="15.0" fill="rgb(238,15,31)" rx="2" ry="2" />
<text  x="699.10" y="415.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.scanAll (33 samples, 1.17%)</title><rect x="726.2" y="437" width="13.8" height="15.0" fill="rgb(230,186,49)" rx="2" ry="2" />
<text  x="729.19" y="447.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.04%)</title><rect x="1021.6" y="517" width="0.4" height="15.0" fill="rgb(253,107,12)" rx="2" ry="2" />
<text  x="1024.61" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="699.9" y="453" width="0.4" height="15.0" fill="rgb(247,195,30)" rx="2" ry="2" />
<text  x="702.87" y="463.5" ></text>
</g>
<g >
<title>database/sql.driverArgsConnLocked (2 samples, 0.07%)</title><rect x="256.9" y="325" width="0.9" height="15.0" fill="rgb(227,141,35)" rx="2" ry="2" />
<text  x="259.95" y="335.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.04%)</title><rect x="1176.2" y="549" width="0.4" height="15.0" fill="rgb(231,43,26)" rx="2" ry="2" />
<text  x="1179.21" y="559.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.04%)</title><rect x="769.6" y="517" width="0.5" height="15.0" fill="rgb(210,227,36)" rx="2" ry="2" />
<text  x="772.65" y="527.5" ></text>
</g>
<g >
<title>syscall.Read (313 samples, 11.08%)</title><rect x="258.6" y="197" width="130.8" height="15.0" fill="rgb(211,90,26)" rx="2" ry="2" />
<text  x="261.62" y="207.5" >syscall.Read</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddTime (2 samples, 0.07%)</title><rect x="81.9" y="453" width="0.8" height="15.0" fill="rgb(246,60,17)" rx="2" ry="2" />
<text  x="84.87" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.04%)</title><rect x="682.7" y="373" width="0.5" height="15.0" fill="rgb(216,4,29)" rx="2" ry="2" />
<text  x="685.73" y="383.5" ></text>
</g>
<g >
<title>syscall.syscall (390 samples, 13.81%)</title><rect x="509.3" y="245" width="163.0" height="15.0" fill="rgb(250,26,0)" rx="2" ry="2" />
<text  x="512.33" y="255.5" >syscall.syscall</text>
</g>
<g >
<title>syscall.write (29 samples, 1.03%)</title><rect x="726.2" y="277" width="12.1" height="15.0" fill="rgb(235,112,16)" rx="2" ry="2" />
<text  x="729.19" y="287.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).Write (3 samples, 0.11%)</title><rect x="762.5" y="421" width="1.3" height="15.0" fill="rgb(241,143,52)" rx="2" ry="2" />
<text  x="765.54" y="431.5" ></text>
</g>
<g >
<title>runtime.adjustframe (2 samples, 0.07%)</title><rect x="86.5" y="309" width="0.8" height="15.0" fill="rgb(254,222,45)" rx="2" ry="2" />
<text  x="89.47" y="319.5" ></text>
</g>
<g >
<title>runtime.park_m (946 samples, 33.50%)</title><rect x="781.8" y="581" width="395.2" height="15.0" fill="rgb(222,79,4)" rx="2" ry="2" />
<text  x="784.76" y="591.5" >runtime.park_m</text>
</g>
<g >
<title>net/http.Header.Get (1 samples, 0.04%)</title><rect x="763.4" y="341" width="0.4" height="15.0" fill="rgb(233,200,15)" rx="2" ry="2" />
<text  x="766.38" y="351.5" ></text>
</g>
<g >
<title>syscall.syscall (13 samples, 0.46%)</title><rect x="40.9" y="453" width="5.5" height="15.0" fill="rgb(242,17,12)" rx="2" ry="2" />
<text  x="43.92" y="463.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.04%)</title><rect x="1176.6" y="549" width="0.4" height="15.0" fill="rgb(248,203,37)" rx="2" ry="2" />
<text  x="1179.63" y="559.5" ></text>
</g>
<g >
<title>syscall.Write (29 samples, 1.03%)</title><rect x="726.2" y="293" width="12.1" height="15.0" fill="rgb(226,175,20)" rx="2" ry="2" />
<text  x="729.19" y="303.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Next (3 samples, 0.11%)</title><rect x="679.0" y="389" width="1.2" height="15.0" fill="rgb(236,132,39)" rx="2" ry="2" />
<text  x="681.97" y="399.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.07%)</title><rect x="755.0" y="373" width="0.9" height="15.0" fill="rgb(219,33,6)" rx="2" ry="2" />
<text  x="758.02" y="383.5" ></text>
</g>
<g >
<title>syscall.read (34 samples, 1.20%)</title><rect x="706.1" y="197" width="14.2" height="15.0" fill="rgb(250,208,45)" rx="2" ry="2" />
<text  x="709.13" y="207.5" ></text>
</g>
<g >
<title>runtime.goexit0 (25 samples, 0.89%)</title><rect x="770.9" y="581" width="10.4" height="15.0" fill="rgb(217,102,42)" rx="2" ry="2" />
<text  x="773.90" y="591.5" ></text>
</g>
<g >
<title>time.(*Location).lookup (1 samples, 0.04%)</title><rect x="82.3" y="341" width="0.4" height="15.0" fill="rgb(220,75,51)" rx="2" ry="2" />
<text  x="85.29" y="351.5" ></text>
</g>
<g >
<title>syscall.syscall (10 samples, 0.35%)</title><rect x="674.4" y="229" width="4.2" height="15.0" fill="rgb(209,40,27)" rx="2" ry="2" />
<text  x="677.38" y="239.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.04%)</title><rect x="86.9" y="277" width="0.4" height="15.0" fill="rgb(215,113,4)" rx="2" ry="2" />
<text  x="89.88" y="287.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.04%)</title><rect x="753.8" y="341" width="0.4" height="15.0" fill="rgb(250,173,49)" rx="2" ry="2" />
<text  x="756.77" y="351.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).watchCancel (1 samples, 0.04%)</title><rect x="254.0" y="293" width="0.4" height="15.0" fill="rgb(245,173,41)" rx="2" ry="2" />
<text  x="257.02" y="303.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).EncodeEntry (2 samples, 0.07%)</title><rect x="750.4" y="421" width="0.9" height="15.0" fill="rgb(207,187,6)" rx="2" ry="2" />
<text  x="753.42" y="431.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="50.9" y="485" width="0.5" height="15.0" fill="rgb(238,191,18)" rx="2" ry="2" />
<text  x="53.95" y="495.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.04%)</title><rect x="782.6" y="549" width="0.4" height="15.0" fill="rgb(242,30,5)" rx="2" ry="2" />
<text  x="785.60" y="559.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (1 samples, 0.04%)</title><rect x="38.4" y="565" width="0.4" height="15.0" fill="rgb(216,217,9)" rx="2" ry="2" />
<text  x="41.41" y="575.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.07%)</title><rect x="86.5" y="373" width="0.8" height="15.0" fill="rgb(215,110,17)" rx="2" ry="2" />
<text  x="89.47" y="383.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.Field.AddTo (1 samples, 0.04%)</title><rect x="695.7" y="373" width="0.4" height="15.0" fill="rgb(223,204,48)" rx="2" ry="2" />
<text  x="698.69" y="383.5" ></text>
</g>
<g >
<title>syscall.Write (390 samples, 13.81%)</title><rect x="509.3" y="277" width="163.0" height="15.0" fill="rgb(229,152,31)" rx="2" ry="2" />
<text  x="512.33" y="287.5" >syscall.Write</text>
</g>
<g >
<title>bluebell/logic.GetPostDetailByID (1,465 samples, 51.88%)</title><rect x="88.1" y="469" width="612.2" height="15.0" fill="rgb(222,155,15)" rx="2" ry="2" />
<text  x="91.14" y="479.5" >bluebell/logic.GetPostDetailByID</text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.04%)</title><rect x="684.4" y="389" width="0.4" height="15.0" fill="rgb(220,200,19)" rx="2" ry="2" />
<text  x="687.41" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketStr (362 samples, 12.82%)</title><rect x="258.6" y="277" width="151.3" height="15.0" fill="rgb(231,30,44)" rx="2" ry="2" />
<text  x="261.62" y="287.5" >github.com/go-sql-d..</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).fill (6 samples, 0.21%)</title><rect x="702.0" y="261" width="2.5" height="15.0" fill="rgb(238,168,24)" rx="2" ry="2" />
<text  x="704.95" y="271.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeCommandPacketUint32 (393 samples, 13.92%)</title><rect x="508.1" y="341" width="164.2" height="15.0" fill="rgb(241,114,42)" rx="2" ry="2" />
<text  x="511.07" y="351.5" >github.com/go-sql-dri..</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).fill (224 samples, 7.93%)</title><rect x="94.8" y="245" width="93.6" height="15.0" fill="rgb(212,101,19)" rx="2" ry="2" />
<text  x="97.82" y="255.5" >github.com/..</text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (2 samples, 0.07%)</title><rect x="762.5" y="341" width="0.9" height="15.0" fill="rgb(254,77,17)" rx="2" ry="2" />
<text  x="765.54" y="351.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeTimeLayout (1 samples, 0.04%)</title><rect x="85.6" y="437" width="0.4" height="15.0" fill="rgb(214,83,35)" rx="2" ry="2" />
<text  x="88.63" y="447.5" ></text>
</g>
<g >
<title>database/sql.(*DB).Query (994 samples, 35.20%)</title><rect x="89.8" y="421" width="415.3" height="15.0" fill="rgb(237,123,32)" rx="2" ry="2" />
<text  x="92.81" y="431.5" >database/sql.(*DB).Query</text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.04%)</title><rect x="46.4" y="517" width="0.4" height="15.0" fill="rgb(214,63,33)" rx="2" ry="2" />
<text  x="49.35" y="527.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.04%)</title><rect x="700.7" y="293" width="0.4" height="15.0" fill="rgb(253,173,16)" rx="2" ry="2" />
<text  x="703.70" y="303.5" ></text>
</g>
<g >
<title>syscall.CloseOnExec (1 samples, 0.04%)</title><rect x="91.1" y="229" width="0.4" height="15.0" fill="rgb(239,71,45)" rx="2" ry="2" />
<text  x="94.06" y="239.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="695.7" y="341" width="0.4" height="15.0" fill="rgb(249,40,3)" rx="2" ry="2" />
<text  x="698.69" y="351.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Engine).ServeHTTP (1,706 samples, 60.41%)</title><rect x="51.4" y="565" width="712.8" height="15.0" fill="rgb(250,50,5)" rx="2" ry="2" />
<text  x="54.37" y="575.5" >github.com/gin-gonic/gin.(*Engine).ServeHTTP</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.Field.AddTo (1 samples, 0.04%)</title><rect x="750.8" y="389" width="0.5" height="15.0" fill="rgb(223,122,16)" rx="2" ry="2" />
<text  x="753.84" y="399.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.consoleEncoder.writeContext (2 samples, 0.07%)</title><rect x="754.2" y="405" width="0.8" height="15.0" fill="rgb(234,207,37)" rx="2" ry="2" />
<text  x="757.19" y="415.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.04%)</title><rect x="739.6" y="421" width="0.4" height="15.0" fill="rgb(240,201,49)" rx="2" ry="2" />
<text  x="742.56" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="505.1" y="373" width="0.5" height="15.0" fill="rgb(224,83,15)" rx="2" ry="2" />
<text  x="508.15" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (72 samples, 2.55%)</title><rect x="784.7" y="469" width="30.1" height="15.0" fill="rgb(243,84,41)" rx="2" ry="2" />
<text  x="787.69" y="479.5" >ru..</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeError.func1 (1 samples, 0.04%)</title><rect x="750.8" y="357" width="0.5" height="15.0" fill="rgb(230,141,14)" rx="2" ry="2" />
<text  x="753.84" y="367.5" ></text>
</g>
<g >
<title>net.(*conn).Read (3 samples, 0.11%)</title><rect x="764.6" y="581" width="1.3" height="15.0" fill="rgb(212,28,53)" rx="2" ry="2" />
<text  x="767.63" y="591.5" ></text>
</g>
<g >
<title>syscall.syscall (6 samples, 0.21%)</title><rect x="31.7" y="453" width="2.5" height="15.0" fill="rgb(236,109,8)" rx="2" ry="2" />
<text  x="34.73" y="463.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (6 samples, 0.21%)</title><rect x="702.0" y="229" width="2.5" height="15.0" fill="rgb(253,148,10)" rx="2" ry="2" />
<text  x="704.95" y="239.5" ></text>
</g>
<g >
<title>database/sql.(*DB).QueryContext (994 samples, 35.20%)</title><rect x="89.8" y="405" width="415.3" height="15.0" fill="rgb(222,108,25)" rx="2" ry="2" />
<text  x="92.81" y="415.5" >database/sql.(*DB).QueryContext</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*binaryRows).Next (1 samples, 0.04%)</title><rect x="679.0" y="325" width="0.4" height="15.0" fill="rgb(211,75,37)" rx="2" ry="2" />
<text  x="681.97" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="185.9" y="117" width="0.4" height="15.0" fill="rgb(252,56,45)" rx="2" ry="2" />
<text  x="188.91" y="127.5" ></text>
</g>
<g >
<title>net.(*conn).Read (13 samples, 0.46%)</title><rect x="720.8" y="229" width="5.4" height="15.0" fill="rgb(232,124,11)" rx="2" ry="2" />
<text  x="723.76" y="239.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).check (4 samples, 0.14%)</title><rect x="52.2" y="501" width="1.7" height="15.0" fill="rgb(214,69,34)" rx="2" ry="2" />
<text  x="55.20" y="511.5" ></text>
</g>
<g >
<title>runtime.kevent (490 samples, 17.35%)</title><rect x="816.4" y="517" width="204.8" height="15.0" fill="rgb(227,32,43)" rx="2" ry="2" />
<text  x="819.44" y="527.5" >runtime.kevent</text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.04%)</title><rect x="679.4" y="325" width="0.4" height="15.0" fill="rgb(229,6,17)" rx="2" ry="2" />
<text  x="682.39" y="335.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (2 samples, 0.07%)</title><rect x="755.0" y="389" width="0.9" height="15.0" fill="rgb(248,209,31)" rx="2" ry="2" />
<text  x="758.02" y="399.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*CheckedEntry).Write (35 samples, 1.24%)</title><rect x="685.2" y="437" width="14.7" height="15.0" fill="rgb(232,1,16)" rx="2" ry="2" />
<text  x="688.24" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="761.3" y="293" width="0.4" height="15.0" fill="rgb(219,226,1)" rx="2" ry="2" />
<text  x="764.29" y="303.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1176.6" y="501" width="0.4" height="15.0" fill="rgb(252,127,43)" rx="2" ry="2" />
<text  x="1179.63" y="511.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.(*Row).Columns (2 samples, 0.07%)</title><rect x="673.5" y="405" width="0.9" height="15.0" fill="rgb(223,212,22)" rx="2" ry="2" />
<text  x="676.54" y="415.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readPacket (224 samples, 7.93%)</title><rect x="94.8" y="277" width="93.6" height="15.0" fill="rgb(221,177,32)" rx="2" ry="2" />
<text  x="97.82" y="287.5" >github.com/..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="768.0" y="501" width="0.4" height="15.0" fill="rgb(209,55,47)" rx="2" ry="2" />
<text  x="770.97" y="511.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (2 samples, 0.07%)</title><rect x="50.5" y="565" width="0.9" height="15.0" fill="rgb(220,181,3)" rx="2" ry="2" />
<text  x="53.53" y="575.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.04%)</title><rect x="769.2" y="533" width="0.4" height="15.0" fill="rgb(208,15,23)" rx="2" ry="2" />
<text  x="772.23" y="543.5" ></text>
</g>
<g >
<title>syscall.syscall (224 samples, 7.93%)</title><rect x="94.8" y="165" width="93.6" height="15.0" fill="rgb(252,93,15)" rx="2" ry="2" />
<text  x="97.82" y="175.5" >syscall.sys..</text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.04%)</title><rect x="90.2" y="197" width="0.4" height="15.0" fill="rgb(246,175,42)" rx="2" ry="2" />
<text  x="93.23" y="207.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddDuration (1 samples, 0.04%)</title><rect x="83.1" y="421" width="0.4" height="15.0" fill="rgb(233,120,6)" rx="2" ry="2" />
<text  x="86.12" y="431.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.04%)</title><rect x="684.8" y="389" width="0.4" height="15.0" fill="rgb(243,183,27)" rx="2" ry="2" />
<text  x="687.82" y="399.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (16 samples, 0.57%)</title><rect x="755.9" y="421" width="6.6" height="15.0" fill="rgb(244,26,29)" rx="2" ry="2" />
<text  x="758.86" y="431.5" ></text>
</g>
<g >
<title>net.(*netFD).Close (14 samples, 0.50%)</title><rect x="40.9" y="533" width="5.9" height="15.0" fill="rgb(239,109,2)" rx="2" ry="2" />
<text  x="43.92" y="543.5" ></text>
</g>
<g >
<title>database/sql.(*DB).startCleanerLocked (1 samples, 0.04%)</title><rect x="506.4" y="325" width="0.4" height="15.0" fill="rgb(218,110,27)" rx="2" ry="2" />
<text  x="509.40" y="335.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (2 samples, 0.07%)</title><rect x="53.0" y="437" width="0.9" height="15.0" fill="rgb(216,80,3)" rx="2" ry="2" />
<text  x="56.04" y="447.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (152 samples, 5.38%)</title><rect x="188.4" y="245" width="63.5" height="15.0" fill="rgb(214,137,39)" rx="2" ry="2" />
<text  x="191.42" y="255.5" >net.(*..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="678.6" y="357" width="0.4" height="15.0" fill="rgb(238,214,25)" rx="2" ry="2" />
<text  x="681.56" y="367.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="699.4" y="373" width="0.5" height="15.0" fill="rgb(229,98,33)" rx="2" ry="2" />
<text  x="702.45" y="383.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).JSON (20 samples, 0.71%)</title><rect x="755.9" y="485" width="8.3" height="15.0" fill="rgb(245,195,25)" rx="2" ry="2" />
<text  x="758.86" y="495.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (13 samples, 0.46%)</title><rect x="720.8" y="213" width="5.4" height="15.0" fill="rgb(223,152,25)" rx="2" ry="2" />
<text  x="723.76" y="223.5" ></text>
</g>
<g >
<title>net/http.Header.Clone (1 samples, 0.04%)</title><rect x="763.8" y="389" width="0.4" height="15.0" fill="rgb(233,110,39)" rx="2" ry="2" />
<text  x="766.80" y="399.5" ></text>
</g>
<g >
<title>time.Time.Format (1 samples, 0.04%)</title><rect x="85.6" y="421" width="0.4" height="15.0" fill="rgb(205,136,18)" rx="2" ry="2" />
<text  x="88.63" y="431.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (1 samples, 0.04%)</title><rect x="38.4" y="533" width="0.4" height="15.0" fill="rgb(211,146,12)" rx="2" ry="2" />
<text  x="41.41" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (31 samples, 1.10%)</title><rect x="1177.0" y="597" width="13.0" height="15.0" fill="rgb(234,111,8)" rx="2" ry="2" />
<text  x="1180.05" y="607.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (4 samples, 0.14%)</title><rect x="704.5" y="261" width="1.6" height="15.0" fill="rgb(209,178,21)" rx="2" ry="2" />
<text  x="707.46" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="761.3" y="389" width="0.4" height="15.0" fill="rgb(244,98,23)" rx="2" ry="2" />
<text  x="764.29" y="399.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Next.func1 (3 samples, 0.11%)</title><rect x="679.0" y="357" width="1.2" height="15.0" fill="rgb(236,190,6)" rx="2" ry="2" />
<text  x="681.97" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="252.4" y="309" width="0.4" height="15.0" fill="rgb(247,221,34)" rx="2" ry="2" />
<text  x="255.35" y="319.5" ></text>
</g>
<g >
<title>net.(*conn).Write (10 samples, 0.35%)</title><rect x="674.4" y="293" width="4.2" height="15.0" fill="rgb(222,199,48)" rx="2" ry="2" />
<text  x="677.38" y="303.5" ></text>
</g>
<g >
<title>runtime.wakep (13 samples, 0.46%)</title><rect x="1181.2" y="549" width="5.5" height="15.0" fill="rgb(214,176,29)" rx="2" ry="2" />
<text  x="1184.23" y="559.5" ></text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.04%)</title><rect x="88.1" y="437" width="0.5" height="15.0" fill="rgb(209,55,34)" rx="2" ry="2" />
<text  x="91.14" y="447.5" ></text>
</g>
<g >
<title>net.(*conn).Write (29 samples, 1.03%)</title><rect x="726.2" y="325" width="12.1" height="15.0" fill="rgb(241,50,54)" rx="2" ry="2" />
<text  x="729.19" y="335.5" ></text>
</g>
<g >
<title>runtime.semawakeup (72 samples, 2.55%)</title><rect x="784.7" y="485" width="30.1" height="15.0" fill="rgb(238,5,54)" rx="2" ry="2" />
<text  x="787.69" y="495.5" >ru..</text>
</g>
<g >
<title>syscall.Accept (7 samples, 0.25%)</title><rect x="28.4" y="469" width="2.9" height="15.0" fill="rgb(243,132,7)" rx="2" ry="2" />
<text  x="31.39" y="479.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (1 samples, 0.04%)</title><rect x="701.5" y="341" width="0.5" height="15.0" fill="rgb(222,173,19)" rx="2" ry="2" />
<text  x="704.54" y="351.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.04%)</title><rect x="701.5" y="293" width="0.5" height="15.0" fill="rgb(210,45,38)" rx="2" ry="2" />
<text  x="704.54" y="303.5" ></text>
</g>
<g >
<title>runtime.stealWork (21 samples, 0.74%)</title><rect x="1021.6" y="533" width="8.8" height="15.0" fill="rgb(222,150,0)" rx="2" ry="2" />
<text  x="1024.61" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*ioCore).Write (76 samples, 2.69%)</title><rect x="54.3" y="485" width="31.7" height="15.0" fill="rgb(208,87,52)" rx="2" ry="2" />
<text  x="57.29" y="495.5" >go..</text>
</g>
<g >
<title>time.Time.locabs (1 samples, 0.04%)</title><rect x="82.3" y="357" width="0.4" height="15.0" fill="rgb(243,58,10)" rx="2" ry="2" />
<text  x="85.29" y="367.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (1 samples, 0.04%)</title><rect x="781.8" y="533" width="0.4" height="15.0" fill="rgb(228,21,25)" rx="2" ry="2" />
<text  x="784.76" y="543.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (393 samples, 13.92%)</title><rect x="508.1" y="325" width="164.2" height="15.0" fill="rgb(221,80,35)" rx="2" ry="2" />
<text  x="511.07" y="335.5" >github.com/go-sql-dri..</text>
</g>
<g >
<title>runtime.libcCall (4 samples, 0.14%)</title><rect x="186.7" y="149" width="1.7" height="15.0" fill="rgb(219,149,22)" rx="2" ry="2" />
<text  x="189.75" y="159.5" ></text>
</g>
<g >
<title>runtime.itabHashFunc (1 samples, 0.04%)</title><rect x="681.5" y="325" width="0.4" height="15.0" fill="rgb(250,110,37)" rx="2" ry="2" />
<text  x="684.48" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (8 samples, 0.28%)</title><rect x="1186.7" y="533" width="3.3" height="15.0" fill="rgb(249,139,38)" rx="2" ry="2" />
<text  x="1189.66" y="543.5" ></text>
</g>
<g >
<title>database/sql.(*DB).queryDC.func2 (587 samples, 20.79%)</title><rect x="257.8" y="341" width="245.3" height="15.0" fill="rgb(215,102,38)" rx="2" ry="2" />
<text  x="260.78" y="351.5" >database/sql.(*DB).queryDC.func2</text>
</g>
<g >
<title>database/sql.(*Rows).Scan (6 samples, 0.21%)</title><rect x="680.2" y="389" width="2.5" height="15.0" fill="rgb(247,160,45)" rx="2" ry="2" />
<text  x="683.23" y="399.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (1 samples, 0.04%)</title><rect x="684.0" y="309" width="0.4" height="15.0" fill="rgb(251,111,8)" rx="2" ry="2" />
<text  x="686.99" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1177.0" y="533" width="0.5" height="15.0" fill="rgb(225,30,47)" rx="2" ry="2" />
<text  x="1180.05" y="543.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).readPrepareResultPacket (13 samples, 0.46%)</title><rect x="720.8" y="293" width="5.4" height="15.0" fill="rgb(216,1,0)" rx="2" ry="2" />
<text  x="723.76" y="303.5" ></text>
</g>
<g >
<title>syscall.Write (151 samples, 5.35%)</title><rect x="188.8" y="229" width="63.1" height="15.0" fill="rgb(228,137,4)" rx="2" ry="2" />
<text  x="191.84" y="239.5" >syscal..</text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.04%)</title><rect x="1030.8" y="517" width="0.4" height="15.0" fill="rgb(221,220,8)" rx="2" ry="2" />
<text  x="1033.80" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.04%)</title><rect x="668.5" y="213" width="0.4" height="15.0" fill="rgb(229,164,3)" rx="2" ry="2" />
<text  x="671.53" y="223.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.connCheck (314 samples, 11.12%)</title><rect x="258.6" y="245" width="131.2" height="15.0" fill="rgb(247,23,39)" rx="2" ry="2" />
<text  x="261.62" y="255.5" >github.com/go-sq..</text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="45.9" y="437" width="0.5" height="15.0" fill="rgb(238,7,11)" rx="2" ry="2" />
<text  x="48.93" y="447.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (10 samples, 0.35%)</title><rect x="674.4" y="309" width="4.2" height="15.0" fill="rgb(241,18,18)" rx="2" ry="2" />
<text  x="677.38" y="319.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.04%)</title><rect x="680.2" y="341" width="0.4" height="15.0" fill="rgb(221,81,6)" rx="2" ry="2" />
<text  x="683.23" y="351.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).nextLocked (2 samples, 0.07%)</title><rect x="738.3" y="373" width="0.8" height="15.0" fill="rgb(227,26,46)" rx="2" ry="2" />
<text  x="741.31" y="383.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.04%)</title><rect x="701.5" y="277" width="0.5" height="15.0" fill="rgb(220,27,47)" rx="2" ry="2" />
<text  x="704.54" y="287.5" ></text>
</g>
<g >
<title>net.IP.String (1 samples, 0.04%)</title><rect x="51.8" y="501" width="0.4" height="15.0" fill="rgb(220,10,28)" rx="2" ry="2" />
<text  x="54.78" y="511.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="814.4" y="453" width="0.4" height="15.0" fill="rgb(226,31,29)" rx="2" ry="2" />
<text  x="817.36" y="463.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="737.9" y="245" width="0.4" height="15.0" fill="rgb(210,29,5)" rx="2" ry="2" />
<text  x="740.89" y="255.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writeHandshakeResponsePacket (1 samples, 0.04%)</title><rect x="701.5" y="357" width="0.5" height="15.0" fill="rgb(208,163,18)" rx="2" ry="2" />
<text  x="704.54" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.04%)</title><rect x="764.6" y="533" width="0.4" height="15.0" fill="rgb(231,95,36)" rx="2" ry="2" />
<text  x="767.63" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddString (1 samples, 0.04%)</title><rect x="83.5" y="421" width="0.5" height="15.0" fill="rgb(251,173,8)" rx="2" ry="2" />
<text  x="86.54" y="431.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (12 samples, 0.42%)</title><rect x="755.9" y="261" width="5.0" height="15.0" fill="rgb(225,199,35)" rx="2" ry="2" />
<text  x="758.86" y="271.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.04%)</title><rect x="739.6" y="405" width="0.4" height="15.0" fill="rgb(212,181,33)" rx="2" ry="2" />
<text  x="742.56" y="415.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="739.6" y="373" width="0.4" height="15.0" fill="rgb(226,161,13)" rx="2" ry="2" />
<text  x="742.56" y="383.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="782.6" y="501" width="0.4" height="15.0" fill="rgb(233,219,32)" rx="2" ry="2" />
<text  x="785.60" y="511.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="251.9" y="309" width="0.5" height="15.0" fill="rgb(227,220,0)" rx="2" ry="2" />
<text  x="254.93" y="319.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (1 samples, 0.04%)</title><rect x="770.5" y="581" width="0.4" height="15.0" fill="rgb(238,110,41)" rx="2" ry="2" />
<text  x="773.48" y="591.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.04%)</title><rect x="1177.5" y="501" width="0.4" height="15.0" fill="rgb(219,62,15)" rx="2" ry="2" />
<text  x="1180.46" y="511.5" ></text>
</g>
<g >
<title>syscall.Read (34 samples, 1.20%)</title><rect x="706.1" y="213" width="14.2" height="15.0" fill="rgb(214,11,14)" rx="2" ry="2" />
<text  x="709.13" y="223.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (1 samples, 0.04%)</title><rect x="1177.0" y="581" width="0.5" height="15.0" fill="rgb(208,89,34)" rx="2" ry="2" />
<text  x="1180.05" y="591.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.04%)</title><rect x="753.8" y="357" width="0.4" height="15.0" fill="rgb(226,82,20)" rx="2" ry="2" />
<text  x="756.77" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).check (1 samples, 0.04%)</title><rect x="740.0" y="453" width="0.4" height="15.0" fill="rgb(217,107,23)" rx="2" ry="2" />
<text  x="742.98" y="463.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.04%)</title><rect x="1176.6" y="533" width="0.4" height="15.0" fill="rgb(216,209,45)" rx="2" ry="2" />
<text  x="1179.63" y="543.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).destroy (13 samples, 0.46%)</title><rect x="40.9" y="485" width="5.5" height="15.0" fill="rgb(252,163,12)" rx="2" ry="2" />
<text  x="43.92" y="495.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.04%)</title><rect x="507.7" y="309" width="0.4" height="15.0" fill="rgb(253,206,41)" rx="2" ry="2" />
<text  x="510.66" y="319.5" ></text>
</g>
<g >
<title>syscall.Read (222 samples, 7.86%)</title><rect x="410.3" y="181" width="92.8" height="15.0" fill="rgb(211,79,9)" rx="2" ry="2" />
<text  x="413.30" y="191.5" >syscall.Read</text>
</g>
<g >
<title>net/http.(*response).Write (3 samples, 0.11%)</title><rect x="762.5" y="405" width="1.3" height="15.0" fill="rgb(239,136,42)" rx="2" ry="2" />
<text  x="765.54" y="415.5" ></text>
</g>
<g >
<title>os.(*File).write (24 samples, 0.85%)</title><rect x="740.4" y="405" width="10.0" height="15.0" fill="rgb(248,120,40)" rx="2" ry="2" />
<text  x="743.40" y="415.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.fieldsByTraversal (1 samples, 0.04%)</title><rect x="682.7" y="405" width="0.5" height="15.0" fill="rgb(212,140,13)" rx="2" ry="2" />
<text  x="685.73" y="415.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (2 samples, 0.07%)</title><rect x="755.0" y="405" width="0.9" height="15.0" fill="rgb(248,63,26)" rx="2" ry="2" />
<text  x="758.02" y="415.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).Close (393 samples, 13.92%)</title><rect x="508.1" y="357" width="164.2" height="15.0" fill="rgb(234,11,32)" rx="2" ry="2" />
<text  x="511.07" y="367.5" >github.com/go-sql-dri..</text>
</g>
<g >
<title>syscall.write (7 samples, 0.25%)</title><rect x="696.1" y="357" width="2.9" height="15.0" fill="rgb(249,203,39)" rx="2" ry="2" />
<text  x="699.10" y="367.5" ></text>
</g>
<g >
<title>net.(*conn).Write (6 samples, 0.21%)</title><rect x="48.0" y="533" width="2.5" height="15.0" fill="rgb(231,210,7)" rx="2" ry="2" />
<text  x="51.02" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.SecondsDurationEncoder (1 samples, 0.04%)</title><rect x="83.1" y="389" width="0.4" height="15.0" fill="rgb(253,210,0)" rx="2" ry="2" />
<text  x="86.12" y="399.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.04%)</title><rect x="679.8" y="325" width="0.4" height="15.0" fill="rgb(231,209,48)" rx="2" ry="2" />
<text  x="682.81" y="335.5" ></text>
</g>
<g >
<title>runtime.netpoll (10 samples, 0.35%)</title><rect x="770.9" y="533" width="4.2" height="15.0" fill="rgb(208,83,9)" rx="2" ry="2" />
<text  x="773.90" y="543.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="782.6" y="533" width="0.4" height="15.0" fill="rgb(215,2,12)" rx="2" ry="2" />
<text  x="785.60" y="543.5" ></text>
</g>
<g >
<title>os.(*File).write (7 samples, 0.25%)</title><rect x="696.1" y="389" width="2.9" height="15.0" fill="rgb(247,108,45)" rx="2" ry="2" />
<text  x="699.10" y="399.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="91.1" y="197" width="0.4" height="15.0" fill="rgb(251,202,20)" rx="2" ry="2" />
<text  x="94.06" y="207.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readHandshakePacket (1 samples, 0.04%)</title><rect x="701.1" y="357" width="0.4" height="15.0" fill="rgb(213,201,7)" rx="2" ry="2" />
<text  x="704.12" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*ioCore).Write (37 samples, 1.31%)</title><rect x="740.4" y="437" width="15.5" height="15.0" fill="rgb(214,68,4)" rx="2" ry="2" />
<text  x="743.40" y="447.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.ISO8601TimeEncoder (1 samples, 0.04%)</title><rect x="699.0" y="389" width="0.4" height="15.0" fill="rgb(216,18,46)" rx="2" ry="2" />
<text  x="702.03" y="399.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (8 samples, 0.28%)</title><rect x="1186.7" y="501" width="3.3" height="15.0" fill="rgb(245,222,34)" rx="2" ry="2" />
<text  x="1189.66" y="511.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.04%)</title><rect x="52.2" y="469" width="0.4" height="15.0" fill="rgb(247,174,47)" rx="2" ry="2" />
<text  x="55.20" y="479.5" ></text>
</g>
<g >
<title>time.Time.Format (1 samples, 0.04%)</title><rect x="699.0" y="357" width="0.4" height="15.0" fill="rgb(234,176,33)" rx="2" ry="2" />
<text  x="702.03" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.04%)</title><rect x="738.7" y="261" width="0.4" height="15.0" fill="rgb(252,69,54)" rx="2" ry="2" />
<text  x="741.73" y="271.5" ></text>
</g>
<g >
<title>net.(*TCPListener).accept (20 samples, 0.71%)</title><rect x="28.4" y="533" width="8.3" height="15.0" fill="rgb(235,172,34)" rx="2" ry="2" />
<text  x="31.39" y="543.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="502.6" y="133" width="0.5" height="15.0" fill="rgb(242,211,3)" rx="2" ry="2" />
<text  x="505.64" y="143.5" ></text>
</g>
<g >
<title>syscall.write (24 samples, 0.85%)</title><rect x="740.4" y="373" width="10.0" height="15.0" fill="rgb(249,7,46)" rx="2" ry="2" />
<text  x="743.40" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="767.6" y="549" width="0.4" height="15.0" fill="rgb(207,9,31)" rx="2" ry="2" />
<text  x="770.56" y="559.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.JSON.Render (20 samples, 0.71%)</title><rect x="755.9" y="453" width="8.3" height="15.0" fill="rgb(212,126,34)" rx="2" ry="2" />
<text  x="758.86" y="463.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.04%)</title><rect x="701.1" y="245" width="0.4" height="15.0" fill="rgb(207,110,37)" rx="2" ry="2" />
<text  x="704.12" y="255.5" ></text>
</g>
<g >
<title>syscall.Read (13 samples, 0.46%)</title><rect x="720.8" y="197" width="5.4" height="15.0" fill="rgb(219,122,24)" rx="2" ry="2" />
<text  x="723.76" y="207.5" ></text>
</g>
<g >
<title>syscall.Write (25 samples, 0.89%)</title><rect x="685.2" y="373" width="10.5" height="15.0" fill="rgb(211,86,31)" rx="2" ry="2" />
<text  x="688.24" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Write (4 samples, 0.14%)</title><rect x="704.5" y="277" width="1.6" height="15.0" fill="rgb(227,139,10)" rx="2" ry="2" />
<text  x="707.46" y="287.5" ></text>
</g>
<g >
<title>database/sql.ctxDriverStmtQuery (382 samples, 13.53%)</title><rect x="92.7" y="341" width="159.7" height="15.0" fill="rgb(232,98,32)" rx="2" ry="2" />
<text  x="95.73" y="351.5" >database/sql.ctxDriv..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="88.1" y="421" width="0.5" height="15.0" fill="rgb(242,219,42)" rx="2" ry="2" />
<text  x="91.14" y="431.5" ></text>
</g>
<g >
<title>syscall.read (4 samples, 0.14%)</title><rect x="39.2" y="421" width="1.7" height="15.0" fill="rgb(221,8,6)" rx="2" ry="2" />
<text  x="42.25" y="431.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (223 samples, 7.90%)</title><rect x="409.9" y="197" width="93.2" height="15.0" fill="rgb(230,183,0)" rx="2" ry="2" />
<text  x="412.88" y="207.5" >net.(*netFD..</text>
</g>
<g >
<title>net.(*conn).Read (4 samples, 0.14%)</title><rect x="39.2" y="469" width="1.7" height="15.0" fill="rgb(208,32,11)" rx="2" ry="2" />
<text  x="42.25" y="479.5" ></text>
</g>
<g >
<title>database/sql.rowsiFromStatement (384 samples, 13.60%)</title><rect x="92.7" y="357" width="160.5" height="15.0" fill="rgb(236,5,50)" rx="2" ry="2" />
<text  x="95.73" y="367.5" >database/sql.rowsiFr..</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1177.0" y="565" width="0.5" height="15.0" fill="rgb(223,138,33)" rx="2" ry="2" />
<text  x="1180.05" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="738.7" y="293" width="0.4" height="15.0" fill="rgb(206,83,42)" rx="2" ry="2" />
<text  x="741.73" y="303.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.04%)</title><rect x="781.3" y="533" width="0.5" height="15.0" fill="rgb(236,106,12)" rx="2" ry="2" />
<text  x="784.35" y="543.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (10 samples, 0.35%)</title><rect x="47.2" y="581" width="4.2" height="15.0" fill="rgb(241,204,24)" rx="2" ry="2" />
<text  x="50.19" y="591.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.04%)</title><rect x="701.5" y="309" width="0.5" height="15.0" fill="rgb(242,9,43)" rx="2" ry="2" />
<text  x="704.54" y="319.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.04%)</title><rect x="760.9" y="277" width="0.4" height="15.0" fill="rgb(226,135,43)" rx="2" ry="2" />
<text  x="763.87" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (8 samples, 0.28%)</title><rect x="1186.7" y="517" width="3.3" height="15.0" fill="rgb(216,76,4)" rx="2" ry="2" />
<text  x="1189.66" y="527.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.WriteJSON (20 samples, 0.71%)</title><rect x="755.9" y="437" width="8.3" height="15.0" fill="rgb(238,38,8)" rx="2" ry="2" />
<text  x="758.86" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="761.3" y="373" width="0.4" height="15.0" fill="rgb(229,147,43)" rx="2" ry="2" />
<text  x="764.29" y="383.5" ></text>
</g>
<g >
<title>runtime.stealWork (4 samples, 0.14%)</title><rect x="775.1" y="533" width="1.6" height="15.0" fill="rgb(244,121,35)" rx="2" ry="2" />
<text  x="778.08" y="543.5" ></text>
</g>
<g >
<title>runtime.semawakeup (13 samples, 0.46%)</title><rect x="1181.2" y="501" width="5.5" height="15.0" fill="rgb(251,62,13)" rx="2" ry="2" />
<text  x="1184.23" y="511.5" ></text>
</g>
<g >
<title>syscall.Write (7 samples, 0.25%)</title><rect x="696.1" y="373" width="2.9" height="15.0" fill="rgb(254,132,13)" rx="2" ry="2" />
<text  x="699.10" y="383.5" ></text>
</g>
<g >
<title>runtime.semasleep (326 samples, 11.54%)</title><rect x="1031.2" y="485" width="136.2" height="15.0" fill="rgb(249,187,33)" rx="2" ry="2" />
<text  x="1034.22" y="495.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.04%)</title><rect x="782.6" y="517" width="0.4" height="15.0" fill="rgb(214,52,19)" rx="2" ry="2" />
<text  x="785.60" y="527.5" ></text>
</g>
<g >
<title>syscall.syscall (29 samples, 1.03%)</title><rect x="726.2" y="261" width="12.1" height="15.0" fill="rgb(239,176,46)" rx="2" ry="2" />
<text  x="729.19" y="271.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.07%)</title><rect x="749.6" y="341" width="0.8" height="15.0" fill="rgb(246,2,38)" rx="2" ry="2" />
<text  x="752.59" y="351.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).readNext (223 samples, 7.90%)</title><rect x="409.9" y="245" width="93.2" height="15.0" fill="rgb(212,71,38)" rx="2" ry="2" />
<text  x="412.88" y="255.5" >github.com/..</text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.04%)</title><rect x="1177.5" y="549" width="0.4" height="15.0" fill="rgb(206,26,50)" rx="2" ry="2" />
<text  x="1180.46" y="559.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.04%)</title><rect x="52.6" y="453" width="0.4" height="15.0" fill="rgb(216,123,33)" rx="2" ry="2" />
<text  x="55.62" y="463.5" ></text>
</g>
<g >
<title>github.com/fsnotify/fsnotify.(*Watcher).readEvents (23 samples, 0.81%)</title><rect x="10.0" y="597" width="9.6" height="15.0" fill="rgb(208,65,14)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).releaseConn (5 samples, 0.18%)</title><rect x="506.0" y="373" width="2.1" height="15.0" fill="rgb(218,218,45)" rx="2" ry="2" />
<text  x="508.98" y="383.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*CheckedEntry).Write (77 samples, 2.73%)</title><rect x="53.9" y="501" width="32.1" height="15.0" fill="rgb(241,167,52)" rx="2" ry="2" />
<text  x="56.87" y="511.5" >go..</text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.04%)</title><rect x="768.0" y="533" width="0.4" height="15.0" fill="rgb(205,124,40)" rx="2" ry="2" />
<text  x="770.97" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/buffer.(*Buffer).AppendTime (1 samples, 0.04%)</title><rect x="82.3" y="389" width="0.4" height="15.0" fill="rgb(234,176,41)" rx="2" ry="2" />
<text  x="85.29" y="399.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).writeExecutePacket (152 samples, 5.38%)</title><rect x="188.4" y="293" width="63.5" height="15.0" fill="rgb(240,124,21)" rx="2" ry="2" />
<text  x="191.42" y="303.5" >github..</text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (3 samples, 0.11%)</title><rect x="762.5" y="357" width="1.3" height="15.0" fill="rgb(250,101,36)" rx="2" ry="2" />
<text  x="765.54" y="367.5" ></text>
</g>
<g >
<title>syscall.syscall (7 samples, 0.25%)</title><rect x="696.1" y="341" width="2.9" height="15.0" fill="rgb(222,29,53)" rx="2" ry="2" />
<text  x="699.10" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.04%)</title><rect x="409.9" y="165" width="0.4" height="15.0" fill="rgb(211,155,1)" rx="2" ry="2" />
<text  x="412.88" y="175.5" ></text>
</g>
<g >
<title>syscall.syscall (25 samples, 0.89%)</title><rect x="685.2" y="341" width="10.5" height="15.0" fill="rgb(225,87,18)" rx="2" ry="2" />
<text  x="688.24" y="351.5" ></text>
</g>
<g >
<title>runtime.getitab (2 samples, 0.07%)</title><rect x="681.1" y="341" width="0.8" height="15.0" fill="rgb(234,219,5)" rx="2" ry="2" />
<text  x="684.06" y="351.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.04%)</title><rect x="763.0" y="309" width="0.4" height="15.0" fill="rgb(243,220,50)" rx="2" ry="2" />
<text  x="765.96" y="319.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.04%)</title><rect x="684.4" y="373" width="0.4" height="15.0" fill="rgb(242,152,12)" rx="2" ry="2" />
<text  x="687.41" y="383.5" ></text>
</g>
<g >
<title>time.Time.MarshalJSON (2 samples, 0.07%)</title><rect x="757.1" y="213" width="0.8" height="15.0" fill="rgb(211,40,3)" rx="2" ry="2" />
<text  x="760.11" y="223.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).PrepareContext (48 samples, 1.70%)</title><rect x="706.1" y="325" width="20.1" height="15.0" fill="rgb(231,222,35)" rx="2" ry="2" />
<text  x="709.13" y="335.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).QueryContext (7 samples, 0.25%)</title><rect x="254.0" y="309" width="2.9" height="15.0" fill="rgb(218,203,9)" rx="2" ry="2" />
<text  x="257.02" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.14%)</title><rect x="503.5" y="357" width="1.6" height="15.0" fill="rgb(236,188,32)" rx="2" ry="2" />
<text  x="506.48" y="367.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="85.2" y="389" width="0.4" height="15.0" fill="rgb(248,82,7)" rx="2" ry="2" />
<text  x="88.21" y="399.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.04%)</title><rect x="767.6" y="533" width="0.4" height="15.0" fill="rgb(231,202,50)" rx="2" ry="2" />
<text  x="770.56" y="543.5" ></text>
</g>
<g >
<title>runtime.kevent (8 samples, 0.28%)</title><rect x="1177.9" y="517" width="3.3" height="15.0" fill="rgb(236,97,31)" rx="2" ry="2" />
<text  x="1180.88" y="527.5" ></text>
</g>
<g >
<title>runtime.write1 (1 samples, 0.04%)</title><rect x="780.9" y="517" width="0.4" height="15.0" fill="rgb(220,5,35)" rx="2" ry="2" />
<text  x="783.93" y="527.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (13 samples, 0.46%)</title><rect x="755.9" y="373" width="5.4" height="15.0" fill="rgb(231,98,1)" rx="2" ry="2" />
<text  x="758.86" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).accept (17 samples, 0.60%)</title><rect x="28.4" y="517" width="7.1" height="15.0" fill="rgb(247,42,47)" rx="2" ry="2" />
<text  x="31.39" y="527.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).fill (13 samples, 0.46%)</title><rect x="720.8" y="245" width="5.4" height="15.0" fill="rgb(250,209,7)" rx="2" ry="2" />
<text  x="723.76" y="255.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="28.0" y="485" width="0.4" height="15.0" fill="rgb(244,141,5)" rx="2" ry="2" />
<text  x="30.97" y="495.5" ></text>
</g>
<g >
<title>net/http.(*Server).ListenAndServe (24 samples, 0.85%)</title><rect x="28.4" y="581" width="10.0" height="15.0" fill="rgb(230,44,13)" rx="2" ry="2" />
<text  x="31.39" y="591.5" ></text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.04%)</title><rect x="31.3" y="453" width="0.4" height="15.0" fill="rgb(233,102,28)" rx="2" ry="2" />
<text  x="34.31" y="463.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.04%)</title><rect x="756.3" y="245" width="0.4" height="15.0" fill="rgb(250,95,36)" rx="2" ry="2" />
<text  x="759.27" y="255.5" ></text>
</g>
<g >
<title>syscall.write (4 samples, 0.14%)</title><rect x="84.0" y="421" width="1.6" height="15.0" fill="rgb(243,11,34)" rx="2" ry="2" />
<text  x="86.96" y="431.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (13 samples, 0.46%)</title><rect x="755.9" y="357" width="5.4" height="15.0" fill="rgb(222,56,45)" rx="2" ry="2" />
<text  x="758.86" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (13 samples, 0.46%)</title><rect x="40.9" y="517" width="5.5" height="15.0" fill="rgb(206,16,15)" rx="2" ry="2" />
<text  x="43.92" y="527.5" ></text>
</g>
<g >
<title>syscall.syscall6 (2 samples, 0.07%)</title><rect x="35.9" y="469" width="0.8" height="15.0" fill="rgb(227,125,53)" rx="2" ry="2" />
<text  x="38.91" y="479.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.consoleEncoder.EncodeEntry (1 samples, 0.04%)</title><rect x="85.6" y="469" width="0.4" height="15.0" fill="rgb(212,222,41)" rx="2" ry="2" />
<text  x="88.63" y="479.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.04%)</title><rect x="50.5" y="501" width="0.4" height="15.0" fill="rgb(242,212,16)" rx="2" ry="2" />
<text  x="53.53" y="511.5" ></text>
</g>
<g >
<title>database/sql.rowsiFromStatement (10 samples, 0.35%)</title><rect x="702.0" y="373" width="4.1" height="15.0" fill="rgb(218,134,52)" rx="2" ry="2" />
<text  x="704.95" y="383.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (1,706 samples, 60.41%)</title><rect x="51.4" y="581" width="712.8" height="15.0" fill="rgb(208,106,51)" rx="2" ry="2" />
<text  x="54.37" y="591.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>syscall.Write (1 samples, 0.04%)</title><rect x="720.3" y="229" width="0.5" height="15.0" fill="rgb(225,44,19)" rx="2" ry="2" />
<text  x="723.34" y="239.5" ></text>
</g>
<g >
<title>syscall.syscall (6 samples, 0.21%)</title><rect x="48.0" y="469" width="2.5" height="15.0" fill="rgb(222,94,45)" rx="2" ry="2" />
<text  x="51.02" y="479.5" ></text>
</g>
<g >
<title>database/sql.withLock (48 samples, 1.70%)</title><rect x="706.1" y="373" width="20.1" height="15.0" fill="rgb(230,226,46)" rx="2" ry="2" />
<text  x="709.13" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.07%)</title><rect x="53.0" y="453" width="0.9" height="15.0" fill="rgb(207,51,28)" rx="2" ry="2" />
<text  x="56.04" y="463.5" ></text>
</g>
<g >
<title>database/sql.(*DB).conn (4 samples, 0.14%)</title><rect x="700.3" y="389" width="1.7" height="15.0" fill="rgb(214,209,19)" rx="2" ry="2" />
<text  x="703.28" y="399.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.07%)</title><rect x="769.6" y="533" width="0.9" height="15.0" fill="rgb(218,214,5)" rx="2" ry="2" />
<text  x="772.65" y="543.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1175.8" y="469" width="0.4" height="15.0" fill="rgb(223,108,22)" rx="2" ry="2" />
<text  x="1178.79" y="479.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.addFields (2 samples, 0.07%)</title><rect x="750.4" y="405" width="0.9" height="15.0" fill="rgb(229,82,12)" rx="2" ry="2" />
<text  x="753.42" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Write (48 samples, 1.70%)</title><rect x="389.8" y="245" width="20.1" height="15.0" fill="rgb(232,171,34)" rx="2" ry="2" />
<text  x="392.82" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.04%)</title><rect x="668.5" y="229" width="0.4" height="15.0" fill="rgb(253,82,42)" rx="2" ry="2" />
<text  x="671.53" y="239.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readColumns (5 samples, 0.18%)</title><rect x="92.7" y="293" width="2.1" height="15.0" fill="rgb(245,78,1)" rx="2" ry="2" />
<text  x="95.73" y="303.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).query (10 samples, 0.35%)</title><rect x="702.0" y="325" width="4.1" height="15.0" fill="rgb(228,199,47)" rx="2" ry="2" />
<text  x="704.95" y="335.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.ISO8601TimeEncoder (1 samples, 0.04%)</title><rect x="82.3" y="421" width="0.4" height="15.0" fill="rgb(209,198,4)" rx="2" ry="2" />
<text  x="85.29" y="431.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.04%)</title><rect x="409.9" y="117" width="0.4" height="15.0" fill="rgb(227,175,19)" rx="2" ry="2" />
<text  x="412.88" y="127.5" ></text>
</g>
<g >
<title>runtime.findrunnable (25 samples, 0.89%)</title><rect x="770.9" y="549" width="10.4" height="15.0" fill="rgb(247,69,27)" rx="2" ry="2" />
<text  x="773.90" y="559.5" ></text>
</g>
<g >
<title>strconv.genericFtoa (1 samples, 0.04%)</title><rect x="83.1" y="341" width="0.4" height="15.0" fill="rgb(214,210,6)" rx="2" ry="2" />
<text  x="86.12" y="351.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="770.5" y="485" width="0.4" height="15.0" fill="rgb(239,93,29)" rx="2" ry="2" />
<text  x="773.48" y="495.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1176.6" y="485" width="0.4" height="15.0" fill="rgb(219,135,7)" rx="2" ry="2" />
<text  x="1179.63" y="495.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.CapitalLevelEncoder (1 samples, 0.04%)</title><rect x="82.7" y="453" width="0.4" height="15.0" fill="rgb(221,226,11)" rx="2" ry="2" />
<text  x="85.71" y="463.5" ></text>
</g>
<g >
<title>runtime.callers (2 samples, 0.07%)</title><rect x="53.0" y="469" width="0.9" height="15.0" fill="rgb(207,118,44)" rx="2" ry="2" />
<text  x="56.04" y="479.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.04%)</title><rect x="769.2" y="453" width="0.4" height="15.0" fill="rgb(211,151,48)" rx="2" ry="2" />
<text  x="772.23" y="463.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (1 samples, 0.04%)</title><rect x="684.0" y="341" width="0.4" height="15.0" fill="rgb(213,154,37)" rx="2" ry="2" />
<text  x="686.99" y="351.5" ></text>
</g>
<g >
<title>runtime.wakep (8 samples, 0.28%)</title><rect x="1186.7" y="565" width="3.3" height="15.0" fill="rgb(242,132,4)" rx="2" ry="2" />
<text  x="1189.66" y="575.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (13 samples, 0.46%)</title><rect x="755.9" y="309" width="5.4" height="15.0" fill="rgb(253,151,47)" rx="2" ry="2" />
<text  x="758.86" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (13 samples, 0.46%)</title><rect x="755.9" y="405" width="5.4" height="15.0" fill="rgb(215,223,14)" rx="2" ry="2" />
<text  x="758.86" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Read (224 samples, 7.93%)</title><rect x="94.8" y="229" width="93.6" height="15.0" fill="rgb(211,31,24)" rx="2" ry="2" />
<text  x="97.82" y="239.5" >net.(*conn)..</text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.04%)</title><rect x="769.2" y="485" width="0.4" height="15.0" fill="rgb(212,215,6)" rx="2" ry="2" />
<text  x="772.23" y="495.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readPacket (223 samples, 7.90%)</title><rect x="409.9" y="261" width="93.2" height="15.0" fill="rgb(206,63,4)" rx="2" ry="2" />
<text  x="412.88" y="271.5" >github.com/..</text>
</g>
<g >
<title>runtime.resettimer (1 samples, 0.04%)</title><rect x="781.8" y="565" width="0.4" height="15.0" fill="rgb(245,141,38)" rx="2" ry="2" />
<text  x="784.76" y="575.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="701.5" y="261" width="0.5" height="15.0" fill="rgb(244,43,12)" rx="2" ry="2" />
<text  x="704.54" y="271.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (35 samples, 1.24%)</title><rect x="706.1" y="277" width="14.7" height="15.0" fill="rgb(238,75,39)" rx="2" ry="2" />
<text  x="709.13" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (72 samples, 2.55%)</title><rect x="784.7" y="517" width="30.1" height="15.0" fill="rgb(226,220,14)" rx="2" ry="2" />
<text  x="787.69" y="527.5" >ru..</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (1 samples, 0.04%)</title><rect x="767.6" y="501" width="0.4" height="15.0" fill="rgb(237,18,52)" rx="2" ry="2" />
<text  x="770.56" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="739.6" y="389" width="0.4" height="15.0" fill="rgb(214,3,50)" rx="2" ry="2" />
<text  x="742.56" y="399.5" ></text>
</g>
<g >
<title>syscall.Write (24 samples, 0.85%)</title><rect x="740.4" y="389" width="10.0" height="15.0" fill="rgb(217,197,5)" rx="2" ry="2" />
<text  x="743.40" y="399.5" ></text>
</g>
<g >
<title>runtime.libcCall (7 samples, 0.25%)</title><rect x="407.0" y="165" width="2.9" height="15.0" fill="rgb(221,168,25)" rx="2" ry="2" />
<text  x="409.95" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.14%)</title><rect x="775.1" y="485" width="1.6" height="15.0" fill="rgb(248,21,41)" rx="2" ry="2" />
<text  x="778.08" y="495.5" ></text>
</g>
<g >
<title>net.(*netFD).init (1 samples, 0.04%)</title><rect x="35.5" y="517" width="0.4" height="15.0" fill="rgb(233,140,5)" rx="2" ry="2" />
<text  x="38.49" y="527.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendString (1 samples, 0.04%)</title><rect x="82.7" y="437" width="0.4" height="15.0" fill="rgb(254,113,17)" rx="2" ry="2" />
<text  x="85.71" y="447.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (7 samples, 0.25%)</title><rect x="767.6" y="597" width="2.9" height="15.0" fill="rgb(240,6,48)" rx="2" ry="2" />
<text  x="770.56" y="607.5" ></text>
</g>
<g >
<title>runtime.makemap (1 samples, 0.04%)</title><rect x="763.8" y="373" width="0.4" height="15.0" fill="rgb(246,40,23)" rx="2" ry="2" />
<text  x="766.80" y="383.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.04%)</title><rect x="684.4" y="405" width="0.4" height="15.0" fill="rgb(219,83,50)" rx="2" ry="2" />
<text  x="687.41" y="415.5" ></text>
</g>
<g >
<title>syscall.rawSyscall (3 samples, 0.11%)</title><rect x="34.2" y="469" width="1.3" height="15.0" fill="rgb(226,126,42)" rx="2" ry="2" />
<text  x="37.24" y="479.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="89.4" y="405" width="0.4" height="15.0" fill="rgb(215,23,50)" rx="2" ry="2" />
<text  x="92.39" y="415.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.04%)</title><rect x="507.7" y="325" width="0.4" height="15.0" fill="rgb(247,85,0)" rx="2" ry="2" />
<text  x="510.66" y="335.5" ></text>
</g>
<g >
<title>runtime.libcCall (13 samples, 0.46%)</title><rect x="14.2" y="517" width="5.4" height="15.0" fill="rgb(207,127,47)" rx="2" ry="2" />
<text  x="17.18" y="527.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).handleParams (1 samples, 0.04%)</title><rect x="700.7" y="357" width="0.4" height="15.0" fill="rgb(227,102,36)" rx="2" ry="2" />
<text  x="703.70" y="367.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="700.7" y="229" width="0.4" height="15.0" fill="rgb(247,73,7)" rx="2" ry="2" />
<text  x="703.70" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (326 samples, 11.54%)</title><rect x="1031.2" y="501" width="136.2" height="15.0" fill="rgb(211,23,27)" rx="2" ry="2" />
<text  x="1034.22" y="511.5" >runtime.notesleep</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).readNext (1 samples, 0.04%)</title><rect x="701.1" y="325" width="0.4" height="15.0" fill="rgb(248,21,46)" rx="2" ry="2" />
<text  x="704.12" y="335.5" ></text>
</g>
<g >
<title>syscall.accept (7 samples, 0.25%)</title><rect x="28.4" y="453" width="2.9" height="15.0" fill="rgb(226,142,53)" rx="2" ry="2" />
<text  x="31.39" y="463.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="30.9" y="421" width="0.4" height="15.0" fill="rgb(222,132,26)" rx="2" ry="2" />
<text  x="33.89" y="431.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlRows).Close (1 samples, 0.04%)</title><rect x="672.3" y="341" width="0.4" height="15.0" fill="rgb(227,104,23)" rx="2" ry="2" />
<text  x="675.29" y="351.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Get (1 samples, 0.04%)</title><rect x="763.4" y="325" width="0.4" height="15.0" fill="rgb(225,180,11)" rx="2" ry="2" />
<text  x="766.38" y="335.5" ></text>
</g>
<g >
<title>syscall.write (47 samples, 1.66%)</title><rect x="390.2" y="197" width="19.7" height="15.0" fill="rgb(241,125,31)" rx="2" ry="2" />
<text  x="393.24" y="207.5" ></text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.04%)</title><rect x="91.1" y="213" width="0.4" height="15.0" fill="rgb(209,175,22)" rx="2" ry="2" />
<text  x="94.06" y="223.5" ></text>
</g>
<g >
<title>net.(*conn).Write (390 samples, 13.81%)</title><rect x="509.3" y="309" width="163.0" height="15.0" fill="rgb(219,190,30)" rx="2" ry="2" />
<text  x="512.33" y="319.5" >net.(*conn).Write</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).GetQuery (2 samples, 0.07%)</title><rect x="86.5" y="469" width="0.8" height="15.0" fill="rgb(251,9,2)" rx="2" ry="2" />
<text  x="89.47" y="479.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (24 samples, 0.85%)</title><rect x="28.4" y="565" width="10.0" height="15.0" fill="rgb(229,177,49)" rx="2" ry="2" />
<text  x="31.39" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.11%)</title><rect x="503.5" y="341" width="1.2" height="15.0" fill="rgb(240,77,0)" rx="2" ry="2" />
<text  x="506.48" y="351.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (4 samples, 0.14%)</title><rect x="93.2" y="277" width="1.6" height="15.0" fill="rgb(224,103,49)" rx="2" ry="2" />
<text  x="96.15" y="287.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).close (402 samples, 14.24%)</title><rect x="505.6" y="389" width="167.9" height="15.0" fill="rgb(225,46,20)" rx="2" ry="2" />
<text  x="508.57" y="399.5" >database/sql.(*Rows)...</text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="186.3" y="37" width="0.4" height="15.0" fill="rgb(246,118,53)" rx="2" ry="2" />
<text  x="189.33" y="47.5" ></text>
</g>
<g >
<title>runtime.gcDrain (9 samples, 0.32%)</title><rect x="1177.5" y="565" width="3.7" height="15.0" fill="rgb(211,55,3)" rx="2" ry="2" />
<text  x="1180.46" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="505.1" y="405" width="0.5" height="15.0" fill="rgb(233,168,48)" rx="2" ry="2" />
<text  x="508.15" y="415.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.04%)</title><rect x="700.7" y="245" width="0.4" height="15.0" fill="rgb(252,20,2)" rx="2" ry="2" />
<text  x="703.70" y="255.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="52.6" y="421" width="0.4" height="15.0" fill="rgb(225,213,13)" rx="2" ry="2" />
<text  x="55.62" y="431.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="50.1" y="453" width="0.4" height="15.0" fill="rgb(232,163,23)" rx="2" ry="2" />
<text  x="53.11" y="463.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddString (2 samples, 0.07%)</title><rect x="754.2" y="341" width="0.8" height="15.0" fill="rgb(208,182,50)" rx="2" ry="2" />
<text  x="757.19" y="351.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write (6 samples, 0.21%)</title><rect x="751.3" y="421" width="2.5" height="15.0" fill="rgb(237,73,27)" rx="2" ry="2" />
<text  x="754.26" y="431.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (1,622 samples, 57.44%)</title><rect x="86.5" y="517" width="677.7" height="15.0" fill="rgb(224,139,23)" rx="2" ry="2" />
<text  x="89.47" y="527.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.04%)</title><rect x="761.3" y="405" width="0.4" height="15.0" fill="rgb(246,134,47)" rx="2" ry="2" />
<text  x="764.29" y="415.5" ></text>
</g>
<g >
<title>syscall.syscall6 (4 samples, 0.14%)</title><rect x="36.7" y="469" width="1.7" height="15.0" fill="rgb(247,112,11)" rx="2" ry="2" />
<text  x="39.74" y="479.5" ></text>
</g>
<g >
<title>context.removeChild (1 samples, 0.04%)</title><rect x="38.4" y="549" width="0.4" height="15.0" fill="rgb(216,94,46)" rx="2" ry="2" />
<text  x="41.41" y="559.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).Prepare (587 samples, 20.79%)</title><rect x="257.8" y="293" width="245.3" height="15.0" fill="rgb(229,13,16)" rx="2" ry="2" />
<text  x="260.78" y="303.5" >github.com/go-sql-driver/mysql.(..</text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (13 samples, 0.46%)</title><rect x="755.9" y="293" width="5.4" height="15.0" fill="rgb(246,39,38)" rx="2" ry="2" />
<text  x="758.86" y="303.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendString (1 samples, 0.04%)</title><rect x="754.2" y="325" width="0.4" height="15.0" fill="rgb(225,40,14)" rx="2" ry="2" />
<text  x="757.19" y="335.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="90.2" y="181" width="0.4" height="15.0" fill="rgb(208,174,22)" rx="2" ry="2" />
<text  x="93.23" y="191.5" ></text>
</g>
<g >
<title>syscall.read (13 samples, 0.46%)</title><rect x="720.8" y="181" width="5.4" height="15.0" fill="rgb(218,143,3)" rx="2" ry="2" />
<text  x="723.76" y="191.5" ></text>
</g>
<g >
<title>syscall.syscall (34 samples, 1.20%)</title><rect x="706.1" y="181" width="14.2" height="15.0" fill="rgb(251,52,51)" rx="2" ry="2" />
<text  x="709.13" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.21%)</title><rect x="768.0" y="581" width="2.5" height="15.0" fill="rgb(210,103,36)" rx="2" ry="2" />
<text  x="770.97" y="591.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.04%)</title><rect x="764.2" y="565" width="0.4" height="15.0" fill="rgb(253,202,48)" rx="2" ry="2" />
<text  x="767.21" y="575.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeError (2 samples, 0.07%)</title><rect x="754.2" y="357" width="0.8" height="15.0" fill="rgb(218,135,1)" rx="2" ry="2" />
<text  x="757.19" y="367.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="31.3" y="437" width="0.4" height="15.0" fill="rgb(231,106,30)" rx="2" ry="2" />
<text  x="34.31" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (2 samples, 0.07%)</title><rect x="50.5" y="549" width="0.9" height="15.0" fill="rgb(241,82,25)" rx="2" ry="2" />
<text  x="53.53" y="559.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).readNext (6 samples, 0.21%)</title><rect x="702.0" y="277" width="2.5" height="15.0" fill="rgb(236,29,18)" rx="2" ry="2" />
<text  x="704.95" y="287.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (1 samples, 0.04%)</title><rect x="673.1" y="373" width="0.4" height="15.0" fill="rgb(219,28,21)" rx="2" ry="2" />
<text  x="676.12" y="383.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (1 samples, 0.04%)</title><rect x="186.3" y="101" width="0.4" height="15.0" fill="rgb(249,135,41)" rx="2" ry="2" />
<text  x="189.33" y="111.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.04%)</title><rect x="749.2" y="325" width="0.4" height="15.0" fill="rgb(252,118,14)" rx="2" ry="2" />
<text  x="752.17" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="86.5" y="389" width="0.8" height="15.0" fill="rgb(242,177,2)" rx="2" ry="2" />
<text  x="89.47" y="399.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (8 samples, 0.28%)</title><rect x="1186.7" y="581" width="3.3" height="15.0" fill="rgb(214,212,33)" rx="2" ry="2" />
<text  x="1189.66" y="591.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (3 samples, 0.11%)</title><rect x="764.6" y="565" width="1.3" height="15.0" fill="rgb(212,139,35)" rx="2" ry="2" />
<text  x="767.63" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.07%)</title><rect x="89.0" y="437" width="0.8" height="15.0" fill="rgb(206,89,13)" rx="2" ry="2" />
<text  x="91.97" y="447.5" ></text>
</g>
<g >
<title>runtime.write (1 samples, 0.04%)</title><rect x="781.8" y="517" width="0.4" height="15.0" fill="rgb(237,60,12)" rx="2" ry="2" />
<text  x="784.76" y="527.5" ></text>
</g>
<g >
<title>go.uber.org/zap/buffer.(*Buffer).AppendString (1 samples, 0.04%)</title><rect x="81.5" y="469" width="0.4" height="15.0" fill="rgb(222,122,41)" rx="2" ry="2" />
<text  x="84.45" y="479.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.(*DB).QueryRowx (1 samples, 0.04%)</title><rect x="505.1" y="421" width="0.5" height="15.0" fill="rgb(245,216,54)" rx="2" ry="2" />
<text  x="508.15" y="431.5" ></text>
</g>
<g >
<title>os.lstatNolog.func1 (21 samples, 0.74%)</title><rect x="19.6" y="533" width="8.8" height="15.0" fill="rgb(226,35,26)" rx="2" ry="2" />
<text  x="22.61" y="543.5" ></text>
</g>
<g >
<title>syscall.syscall (21 samples, 0.74%)</title><rect x="19.6" y="501" width="8.8" height="15.0" fill="rgb(238,65,36)" rx="2" ry="2" />
<text  x="22.61" y="511.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.07%)</title><rect x="185.9" y="149" width="0.8" height="15.0" fill="rgb(225,228,45)" rx="2" ry="2" />
<text  x="188.91" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.04%)</title><rect x="767.6" y="485" width="0.4" height="15.0" fill="rgb(216,210,12)" rx="2" ry="2" />
<text  x="770.56" y="495.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (1 samples, 0.04%)</title><rect x="700.7" y="309" width="0.4" height="15.0" fill="rgb(213,161,12)" rx="2" ry="2" />
<text  x="703.70" y="319.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (390 samples, 13.81%)</title><rect x="509.3" y="293" width="163.0" height="15.0" fill="rgb(220,38,7)" rx="2" ry="2" />
<text  x="512.33" y="303.5" >net.(*netFD).Write</text>
</g>
<g >
<title>fmt.Fprint (1 samples, 0.04%)</title><rect x="753.8" y="405" width="0.4" height="15.0" fill="rgb(252,58,52)" rx="2" ry="2" />
<text  x="756.77" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="699.9" y="437" width="0.4" height="15.0" fill="rgb(219,85,1)" rx="2" ry="2" />
<text  x="702.87" y="447.5" ></text>
</g>
<g >
<title>net.socket (3 samples, 0.11%)</title><rect x="90.2" y="245" width="1.3" height="15.0" fill="rgb(251,219,41)" rx="2" ry="2" />
<text  x="93.23" y="255.5" ></text>
</g>
<g >
<title>syscall.read (222 samples, 7.86%)</title><rect x="410.3" y="165" width="92.8" height="15.0" fill="rgb(240,208,49)" rx="2" ry="2" />
<text  x="413.30" y="175.5" >syscall.read</text>
</g>
<g >
<title>encoding/json.addrMarshalerEncoder (3 samples, 0.11%)</title><rect x="759.2" y="197" width="1.3" height="15.0" fill="rgb(228,102,0)" rx="2" ry="2" />
<text  x="762.20" y="207.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).validateConnection (2 samples, 0.07%)</title><rect x="506.8" y="341" width="0.9" height="15.0" fill="rgb(230,123,33)" rx="2" ry="2" />
<text  x="509.82" y="351.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.04%)</title><rect x="770.5" y="517" width="0.4" height="15.0" fill="rgb(249,150,19)" rx="2" ry="2" />
<text  x="773.48" y="527.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Next (2 samples, 0.07%)</title><rect x="738.3" y="421" width="0.8" height="15.0" fill="rgb(237,207,36)" rx="2" ry="2" />
<text  x="741.31" y="431.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1177.0" y="549" width="0.5" height="15.0" fill="rgb(249,119,23)" rx="2" ry="2" />
<text  x="1180.05" y="559.5" ></text>
</g>
<g >
<title>runtime.runqgrab (4 samples, 0.14%)</title><rect x="775.1" y="501" width="1.6" height="15.0" fill="rgb(223,40,52)" rx="2" ry="2" />
<text  x="778.08" y="511.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Close (29 samples, 1.03%)</title><rect x="726.2" y="421" width="12.1" height="15.0" fill="rgb(250,106,44)" rx="2" ry="2" />
<text  x="729.19" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="756.3" y="229" width="0.4" height="15.0" fill="rgb(228,97,43)" rx="2" ry="2" />
<text  x="759.27" y="239.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).writeExecutePacket (4 samples, 0.14%)</title><rect x="704.5" y="309" width="1.6" height="15.0" fill="rgb(219,165,5)" rx="2" ry="2" />
<text  x="707.46" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (4 samples, 0.14%)</title><rect x="39.2" y="533" width="1.7" height="15.0" fill="rgb(215,104,36)" rx="2" ry="2" />
<text  x="42.25" y="543.5" ></text>
</g>
<g >
<title>database/sql.(*driverStmt).Close (393 samples, 13.92%)</title><rect x="508.1" y="373" width="164.2" height="15.0" fill="rgb(231,145,14)" rx="2" ry="2" />
<text  x="511.07" y="383.5" >database/sql.(*driver..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="672.7" y="373" width="0.4" height="15.0" fill="rgb(212,146,25)" rx="2" ry="2" />
<text  x="675.71" y="383.5" ></text>
</g>
<g >
<title>runtime.usleep (19 samples, 0.67%)</title><rect x="1022.4" y="485" width="8.0" height="15.0" fill="rgb(210,51,16)" rx="2" ry="2" />
<text  x="1025.44" y="495.5" ></text>
</g>
<g >
<title>time.Until (1 samples, 0.04%)</title><rect x="50.9" y="517" width="0.5" height="15.0" fill="rgb(249,176,19)" rx="2" ry="2" />
<text  x="53.95" y="527.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="389.4" y="213" width="0.4" height="15.0" fill="rgb(254,109,52)" rx="2" ry="2" />
<text  x="392.41" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.04%)</title><rect x="760.5" y="229" width="0.4" height="15.0" fill="rgb(228,88,6)" rx="2" ry="2" />
<text  x="763.45" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).RawRead (313 samples, 11.08%)</title><rect x="258.6" y="213" width="130.8" height="15.0" fill="rgb(213,54,51)" rx="2" ry="2" />
<text  x="261.62" y="223.5" >internal/poll.(*..</text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.04%)</title><rect x="53.5" y="405" width="0.4" height="15.0" fill="rgb(216,21,1)" rx="2" ry="2" />
<text  x="56.46" y="415.5" ></text>
</g>
<g >
<title>syscall.Lstat (21 samples, 0.74%)</title><rect x="19.6" y="517" width="8.8" height="15.0" fill="rgb(240,145,21)" rx="2" ry="2" />
<text  x="22.61" y="527.5" ></text>
</g>
<g >
<title>runtime.startm (19 samples, 0.67%)</title><rect x="1168.3" y="517" width="7.9" height="15.0" fill="rgb(216,70,23)" rx="2" ry="2" />
<text  x="1171.27" y="527.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*buffer).takeBuffer (1 samples, 0.04%)</title><rect x="257.8" y="277" width="0.4" height="15.0" fill="rgb(247,196,3)" rx="2" ry="2" />
<text  x="260.78" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.04%)</title><rect x="757.9" y="229" width="0.5" height="15.0" fill="rgb(231,183,37)" rx="2" ry="2" />
<text  x="760.95" y="239.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.04%)</title><rect x="769.2" y="437" width="0.4" height="15.0" fill="rgb(231,4,37)" rx="2" ry="2" />
<text  x="772.23" y="447.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (2 samples, 0.07%)</title><rect x="755.0" y="421" width="0.9" height="15.0" fill="rgb(248,6,43)" rx="2" ry="2" />
<text  x="758.02" y="431.5" ></text>
</g>
<g >
<title>runtime.netpoll (493 samples, 17.46%)</title><rect x="815.2" y="533" width="206.0" height="15.0" fill="rgb(216,119,5)" rx="2" ry="2" />
<text  x="818.19" y="543.5" >runtime.netpoll</text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (2 samples, 0.07%)</title><rect x="50.5" y="533" width="0.9" height="15.0" fill="rgb(245,26,44)" rx="2" ry="2" />
<text  x="53.53" y="543.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.04%)</title><rect x="767.6" y="517" width="0.4" height="15.0" fill="rgb(245,144,46)" rx="2" ry="2" />
<text  x="770.56" y="527.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialSingle (3 samples, 0.11%)</title><rect x="90.2" y="309" width="1.3" height="15.0" fill="rgb(253,162,7)" rx="2" ry="2" />
<text  x="93.23" y="319.5" ></text>
</g>
<g >
<title>syscall.syscall (313 samples, 11.08%)</title><rect x="258.6" y="165" width="130.8" height="15.0" fill="rgb(224,72,5)" rx="2" ry="2" />
<text  x="261.62" y="175.5" >syscall.syscall</text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.04%)</title><rect x="700.7" y="277" width="0.4" height="15.0" fill="rgb(230,203,49)" rx="2" ry="2" />
<text  x="703.70" y="287.5" ></text>
</g>
<g >
<title>runtime.funcline1 (1 samples, 0.04%)</title><rect x="684.8" y="405" width="0.4" height="15.0" fill="rgb(220,80,49)" rx="2" ry="2" />
<text  x="687.82" y="415.5" ></text>
</g>
<g >
<title>runtime.getStackMap (2 samples, 0.07%)</title><rect x="86.5" y="293" width="0.8" height="15.0" fill="rgb(240,25,15)" rx="2" ry="2" />
<text  x="89.47" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="761.7" y="405" width="0.4" height="15.0" fill="rgb(207,99,48)" rx="2" ry="2" />
<text  x="764.71" y="415.5" ></text>
</g>
<g >
<title>runtime.schedule (945 samples, 33.46%)</title><rect x="782.2" y="565" width="394.8" height="15.0" fill="rgb(212,27,49)" rx="2" ry="2" />
<text  x="785.18" y="575.5" >runtime.schedule</text>
</g>
<g >
<title>syscall.read (6 samples, 0.21%)</title><rect x="702.0" y="197" width="2.5" height="15.0" fill="rgb(225,51,47)" rx="2" ry="2" />
<text  x="704.95" y="207.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).readPacket (1 samples, 0.04%)</title><rect x="701.1" y="341" width="0.4" height="15.0" fill="rgb(211,158,44)" rx="2" ry="2" />
<text  x="704.12" y="351.5" ></text>
</g>
<g >
<title>runtime.wakep (20 samples, 0.71%)</title><rect x="1167.9" y="533" width="8.3" height="15.0" fill="rgb(248,109,8)" rx="2" ry="2" />
<text  x="1170.85" y="543.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.04%)</title><rect x="682.7" y="389" width="0.5" height="15.0" fill="rgb(248,8,22)" rx="2" ry="2" />
<text  x="685.73" y="399.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrint (1 samples, 0.04%)</title><rect x="753.8" y="389" width="0.4" height="15.0" fill="rgb(251,3,7)" rx="2" ry="2" />
<text  x="756.77" y="399.5" ></text>
</g>
<g >
<title>database/sql.convertAssignRows (6 samples, 0.21%)</title><rect x="680.2" y="373" width="2.5" height="15.0" fill="rgb(254,160,25)" rx="2" ry="2" />
<text  x="683.23" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="770.5" y="469" width="0.4" height="15.0" fill="rgb(253,102,10)" rx="2" ry="2" />
<text  x="773.48" y="479.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (4 samples, 0.14%)</title><rect x="39.2" y="517" width="1.7" height="15.0" fill="rgb(210,65,44)" rx="2" ry="2" />
<text  x="42.25" y="527.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).Close (29 samples, 1.03%)</title><rect x="726.2" y="373" width="12.1" height="15.0" fill="rgb(240,104,52)" rx="2" ry="2" />
<text  x="729.19" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="761.3" y="357" width="0.4" height="15.0" fill="rgb(218,159,53)" rx="2" ry="2" />
<text  x="764.29" y="367.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (1 samples, 0.04%)</title><rect x="46.4" y="469" width="0.4" height="15.0" fill="rgb(242,41,26)" rx="2" ry="2" />
<text  x="49.35" y="479.5" ></text>
</g>
<g >
<title>database/sql.driverArgsConnLocked (1 samples, 0.04%)</title><rect x="252.4" y="341" width="0.4" height="15.0" fill="rgb(235,59,17)" rx="2" ry="2" />
<text  x="255.35" y="351.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (1 samples, 0.04%)</title><rect x="699.0" y="341" width="0.4" height="15.0" fill="rgb(215,205,34)" rx="2" ry="2" />
<text  x="702.03" y="351.5" ></text>
</g>
<g >
<title>bluebell/controller.GetPostListSimpleHandler (1,622 samples, 57.44%)</title><rect x="86.5" y="501" width="677.7" height="15.0" fill="rgb(251,202,9)" rx="2" ry="2" />
<text  x="89.47" y="511.5" >bluebell/controller.GetPostListSimpleHandler</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*binaryRows).Next (2 samples, 0.07%)</title><rect x="738.3" y="357" width="0.8" height="15.0" fill="rgb(215,80,14)" rx="2" ry="2" />
<text  x="741.31" y="367.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.04%)</title><rect x="389.0" y="133" width="0.4" height="15.0" fill="rgb(253,24,52)" rx="2" ry="2" />
<text  x="391.99" y="143.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.04%)</title><rect x="770.5" y="549" width="0.4" height="15.0" fill="rgb(223,82,7)" rx="2" ry="2" />
<text  x="773.48" y="559.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="50.9" y="501" width="0.5" height="15.0" fill="rgb(218,77,40)" rx="2" ry="2" />
<text  x="53.95" y="511.5" ></text>
</g>
<g >
<title>syscall.Write (6 samples, 0.21%)</title><rect x="751.3" y="389" width="2.5" height="15.0" fill="rgb(238,153,54)" rx="2" ry="2" />
<text  x="754.26" y="399.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (1 samples, 0.04%)</title><rect x="82.3" y="373" width="0.4" height="15.0" fill="rgb(244,141,2)" rx="2" ry="2" />
<text  x="85.29" y="383.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.04%)</title><rect x="782.2" y="549" width="0.4" height="15.0" fill="rgb(215,96,8)" rx="2" ry="2" />
<text  x="785.18" y="559.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="38.8" y="549" width="0.4" height="15.0" fill="rgb(232,99,46)" rx="2" ry="2" />
<text  x="41.83" y="559.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (2 samples, 0.07%)</title><rect x="681.1" y="357" width="0.8" height="15.0" fill="rgb(244,190,43)" rx="2" ry="2" />
<text  x="684.06" y="367.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="814.8" y="533" width="0.4" height="15.0" fill="rgb(206,155,36)" rx="2" ry="2" />
<text  x="817.77" y="543.5" ></text>
</g>
<g >
<title>net.sysSocket (2 samples, 0.07%)</title><rect x="90.2" y="229" width="0.9" height="15.0" fill="rgb(218,213,14)" rx="2" ry="2" />
<text  x="93.23" y="239.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="705.7" y="197" width="0.4" height="15.0" fill="rgb(233,171,33)" rx="2" ry="2" />
<text  x="708.72" y="207.5" ></text>
</g>
<g >
<title>syscall.read (2 samples, 0.07%)</title><rect x="765.0" y="533" width="0.9" height="15.0" fill="rgb(209,92,41)" rx="2" ry="2" />
<text  x="768.05" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendTime (1 samples, 0.04%)</title><rect x="82.3" y="437" width="0.4" height="15.0" fill="rgb(246,83,20)" rx="2" ry="2" />
<text  x="85.29" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mspan).ensureSwept (1 samples, 0.04%)</title><rect x="46.4" y="437" width="0.4" height="15.0" fill="rgb(248,201,45)" rx="2" ry="2" />
<text  x="49.35" y="447.5" ></text>
</g>
<g >
<title>runtime.ready (13 samples, 0.46%)</title><rect x="1181.2" y="565" width="5.5" height="15.0" fill="rgb(223,177,42)" rx="2" ry="2" />
<text  x="1184.23" y="575.5" ></text>
</g>
<g >
<title>syscall.write (25 samples, 0.89%)</title><rect x="685.2" y="357" width="10.5" height="15.0" fill="rgb(209,198,50)" rx="2" ry="2" />
<text  x="688.24" y="367.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).ClientIP (1 samples, 0.04%)</title><rect x="51.8" y="517" width="0.4" height="15.0" fill="rgb(229,215,20)" rx="2" ry="2" />
<text  x="54.78" y="527.5" ></text>
</g>
<g >
<title>database/sql.(*DB).Query (62 samples, 2.20%)</title><rect x="700.3" y="437" width="25.9" height="15.0" fill="rgb(230,142,34)" rx="2" ry="2" />
<text  x="703.28" y="447.5" >d..</text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.07%)</title><rect x="698.2" y="325" width="0.8" height="15.0" fill="rgb(243,26,21)" rx="2" ry="2" />
<text  x="701.19" y="335.5" ></text>
</g>
<g >
<title>runtime.libcCall (3 samples, 0.11%)</title><rect x="80.2" y="389" width="1.3" height="15.0" fill="rgb(208,179,54)" rx="2" ry="2" />
<text  x="83.20" y="399.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.07%)</title><rect x="503.9" y="325" width="0.8" height="15.0" fill="rgb(239,100,20)" rx="2" ry="2" />
<text  x="506.90" y="335.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*stacktrace).Next (1 samples, 0.04%)</title><rect x="684.8" y="437" width="0.4" height="15.0" fill="rgb(217,121,33)" rx="2" ry="2" />
<text  x="687.82" y="447.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (1,622 samples, 57.44%)</title><rect x="86.5" y="533" width="677.7" height="15.0" fill="rgb(216,227,41)" rx="2" ry="2" />
<text  x="89.47" y="543.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.consoleEncoder.EncodeEntry (3 samples, 0.11%)</title><rect x="753.8" y="421" width="1.2" height="15.0" fill="rgb(212,75,31)" rx="2" ry="2" />
<text  x="756.77" y="431.5" ></text>
</g>
<g >
<title>syscall.Write (4 samples, 0.14%)</title><rect x="704.5" y="245" width="1.6" height="15.0" fill="rgb(236,134,31)" rx="2" ry="2" />
<text  x="707.46" y="255.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (1 samples, 0.04%)</title><rect x="35.5" y="469" width="0.4" height="15.0" fill="rgb(245,44,12)" rx="2" ry="2" />
<text  x="38.49" y="479.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="780.1" y="453" width="0.4" height="15.0" fill="rgb(252,114,45)" rx="2" ry="2" />
<text  x="783.09" y="463.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*connector).Connect (3 samples, 0.11%)</title><rect x="90.2" y="357" width="1.3" height="15.0" fill="rgb(241,97,42)" rx="2" ry="2" />
<text  x="93.23" y="367.5" ></text>
</g>
<g >
<title>runtime.modtimer (1 samples, 0.04%)</title><rect x="781.8" y="549" width="0.4" height="15.0" fill="rgb(225,188,15)" rx="2" ry="2" />
<text  x="784.76" y="559.5" ></text>
</g>
<g >
<title>syscall.Socket (1 samples, 0.04%)</title><rect x="90.6" y="213" width="0.5" height="15.0" fill="rgb(254,171,31)" rx="2" ry="2" />
<text  x="93.64" y="223.5" ></text>
</g>
<g >
<title>github.com/natefinch/lumberjack.(*Logger).Write (25 samples, 0.89%)</title><rect x="685.2" y="405" width="10.5" height="15.0" fill="rgb(243,153,2)" rx="2" ry="2" />
<text  x="688.24" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="85.6" y="373" width="0.4" height="15.0" fill="rgb(217,156,25)" rx="2" ry="2" />
<text  x="88.63" y="383.5" ></text>
</g>
<g >
<title>runtime.write1 (1 samples, 0.04%)</title><rect x="781.8" y="501" width="0.4" height="15.0" fill="rgb(210,59,9)" rx="2" ry="2" />
<text  x="784.76" y="511.5" ></text>
</g>
<g >
<title>syscall.syscall (7 samples, 0.25%)</title><rect x="28.4" y="437" width="2.9" height="15.0" fill="rgb(246,0,50)" rx="2" ry="2" />
<text  x="31.39" y="447.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).QueryContext (382 samples, 13.53%)</title><rect x="92.7" y="325" width="159.7" height="15.0" fill="rgb(225,22,15)" rx="2" ry="2" />
<text  x="95.73" y="335.5" >github.com/go-sql-dr..</text>
</g>
<g >
<title>runtime.notewakeup (72 samples, 2.55%)</title><rect x="784.7" y="501" width="30.1" height="15.0" fill="rgb(208,61,50)" rx="2" ry="2" />
<text  x="787.69" y="511.5" >ru..</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.04%)</title><rect x="51.8" y="485" width="0.4" height="15.0" fill="rgb(220,2,7)" rx="2" ry="2" />
<text  x="54.78" y="495.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.04%)</title><rect x="781.3" y="565" width="0.5" height="15.0" fill="rgb(213,204,25)" rx="2" ry="2" />
<text  x="784.35" y="575.5" ></text>
</g>
<g >
<title>syscall.Write (6 samples, 0.21%)</title><rect x="48.0" y="501" width="2.5" height="15.0" fill="rgb(239,203,19)" rx="2" ry="2" />
<text  x="51.02" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (3 samples, 0.11%)</title><rect x="762.5" y="373" width="1.3" height="15.0" fill="rgb(230,75,20)" rx="2" ry="2" />
<text  x="765.54" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1 samples, 0.04%)</title><rect x="701.1" y="293" width="0.4" height="15.0" fill="rgb(242,187,22)" rx="2" ry="2" />
<text  x="704.12" y="303.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).Prepare (48 samples, 1.70%)</title><rect x="706.1" y="309" width="20.1" height="15.0" fill="rgb(248,217,49)" rx="2" ry="2" />
<text  x="709.13" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (13 samples, 0.46%)</title><rect x="40.9" y="501" width="5.5" height="15.0" fill="rgb(248,43,47)" rx="2" ry="2" />
<text  x="43.92" y="511.5" ></text>
</g>
<g >
<title>runtime.Callers (2 samples, 0.07%)</title><rect x="53.0" y="485" width="0.9" height="15.0" fill="rgb(232,77,53)" rx="2" ry="2" />
<text  x="56.04" y="495.5" ></text>
</g>
<g >
<title>runtime.semasleep (10 samples, 0.35%)</title><rect x="776.7" y="485" width="4.2" height="15.0" fill="rgb(216,229,25)" rx="2" ry="2" />
<text  x="779.75" y="495.5" ></text>
</g>
<g >
<title>syscall.Write (10 samples, 0.35%)</title><rect x="674.4" y="261" width="4.2" height="15.0" fill="rgb(212,174,21)" rx="2" ry="2" />
<text  x="677.38" y="271.5" ></text>
</g>
<g >
<title>runtime.libcCall (7 samples, 0.25%)</title><rect x="249.0" y="181" width="2.9" height="15.0" fill="rgb(216,60,34)" rx="2" ry="2" />
<text  x="252.01" y="191.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="774.7" y="501" width="0.4" height="15.0" fill="rgb(223,5,53)" rx="2" ry="2" />
<text  x="777.66" y="511.5" ></text>
</g>
<g >
<title>syscall.syscall (6 samples, 0.21%)</title><rect x="751.3" y="357" width="2.5" height="15.0" fill="rgb(238,82,26)" rx="2" ry="2" />
<text  x="754.26" y="367.5" ></text>
</g>
<g >
<title>syscall.Write (47 samples, 1.66%)</title><rect x="390.2" y="213" width="19.7" height="15.0" fill="rgb(251,126,22)" rx="2" ry="2" />
<text  x="393.24" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.04%)</title><rect x="764.6" y="549" width="0.4" height="15.0" fill="rgb(211,113,10)" rx="2" ry="2" />
<text  x="767.63" y="559.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (4 samples, 0.14%)</title><rect x="39.2" y="485" width="1.7" height="15.0" fill="rgb(220,135,24)" rx="2" ry="2" />
<text  x="42.25" y="495.5" ></text>
</g>
<g >
<title>github.com/spf13/viper.(*Viper).WatchConfig.func1.1 (21 samples, 0.74%)</title><rect x="19.6" y="597" width="8.8" height="15.0" fill="rgb(220,156,6)" rx="2" ry="2" />
<text  x="22.61" y="607.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="186.3" y="69" width="0.4" height="15.0" fill="rgb(243,162,52)" rx="2" ry="2" />
<text  x="189.33" y="79.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (4 samples, 0.14%)</title><rect x="39.2" y="581" width="1.7" height="15.0" fill="rgb(224,20,34)" rx="2" ry="2" />
<text  x="42.25" y="591.5" ></text>
</g>
<g >
<title>github.com/jmoiron/sqlx.(*Row).scanAny (429 samples, 15.19%)</title><rect x="505.6" y="421" width="179.2" height="15.0" fill="rgb(226,78,8)" rx="2" ry="2" />
<text  x="508.57" y="431.5" >github.com/jmoiron/sqlx..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (1,705 samples, 60.38%)</title><rect x="51.8" y="549" width="712.4" height="15.0" fill="rgb(231,193,14)" rx="2" ry="2" />
<text  x="54.78" y="559.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.07%)</title><rect x="775.9" y="469" width="0.8" height="15.0" fill="rgb(209,85,37)" rx="2" ry="2" />
<text  x="778.91" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (13 samples, 0.46%)</title><rect x="755.9" y="389" width="5.4" height="15.0" fill="rgb(236,61,46)" rx="2" ry="2" />
<text  x="758.86" y="399.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.04%)</title><rect x="764.2" y="549" width="0.4" height="15.0" fill="rgb(246,28,21)" rx="2" ry="2" />
<text  x="767.21" y="559.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (1 samples, 0.04%)</title><rect x="753.8" y="325" width="0.4" height="15.0" fill="rgb(249,198,33)" rx="2" ry="2" />
<text  x="756.77" y="335.5" ></text>
</g>
<g >
<title>database/sql.withLock (3 samples, 0.11%)</title><rect x="679.0" y="373" width="1.2" height="15.0" fill="rgb(211,67,51)" rx="2" ry="2" />
<text  x="681.97" y="383.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="86.9" y="261" width="0.4" height="15.0" fill="rgb(214,61,2)" rx="2" ry="2" />
<text  x="89.88" y="271.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).query (381 samples, 13.49%)</title><rect x="92.7" y="309" width="159.2" height="15.0" fill="rgb(209,106,27)" rx="2" ry="2" />
<text  x="95.73" y="319.5" >github.com/go-sql-dr..</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="504.7" y="341" width="0.4" height="15.0" fill="rgb(222,188,45)" rx="2" ry="2" />
<text  x="507.73" y="351.5" ></text>
</g>
<g >
<title>github.com/natefinch/lumberjack.(*Logger).Write (24 samples, 0.85%)</title><rect x="740.4" y="421" width="10.0" height="15.0" fill="rgb(207,150,52)" rx="2" ry="2" />
<text  x="743.40" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="763.8" y="357" width="0.4" height="15.0" fill="rgb(248,84,24)" rx="2" ry="2" />
<text  x="766.80" y="367.5" ></text>
</g>
<g >
<title>database/sql.convertAssignRows (1 samples, 0.04%)</title><rect x="739.1" y="405" width="0.5" height="15.0" fill="rgb(248,184,4)" rx="2" ry="2" />
<text  x="742.14" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*ioCore).Write (35 samples, 1.24%)</title><rect x="685.2" y="421" width="14.7" height="15.0" fill="rgb(216,93,40)" rx="2" ry="2" />
<text  x="688.24" y="431.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).safeAddString (1 samples, 0.04%)</title><rect x="754.6" y="309" width="0.4" height="15.0" fill="rgb(209,53,48)" rx="2" ry="2" />
<text  x="757.60" y="319.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).exec (1 samples, 0.04%)</title><rect x="700.7" y="341" width="0.4" height="15.0" fill="rgb(226,164,0)" rx="2" ry="2" />
<text  x="703.70" y="351.5" ></text>
</g>
<g >
<title>runtime.(*Frames).Next (1 samples, 0.04%)</title><rect x="684.8" y="421" width="0.4" height="15.0" fill="rgb(209,54,6)" rx="2" ry="2" />
<text  x="687.82" y="431.5" ></text>
</g>
<g >
<title>net/url.ParseQuery (2 samples, 0.07%)</title><rect x="86.5" y="437" width="0.8" height="15.0" fill="rgb(219,14,46)" rx="2" ry="2" />
<text  x="89.47" y="447.5" ></text>
</g>
<g >
<title>database/sql.withLock (2 samples, 0.07%)</title><rect x="738.3" y="405" width="0.8" height="15.0" fill="rgb(216,205,9)" rx="2" ry="2" />
<text  x="741.31" y="415.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*connector).Connect (3 samples, 0.11%)</title><rect x="700.7" y="373" width="1.3" height="15.0" fill="rgb(233,102,35)" rx="2" ry="2" />
<text  x="703.70" y="383.5" ></text>
</g>
<g >
<title>runtime.semawakeup (19 samples, 0.67%)</title><rect x="1168.3" y="485" width="7.9" height="15.0" fill="rgb(232,75,1)" rx="2" ry="2" />
<text  x="1171.27" y="495.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeError (1 samples, 0.04%)</title><rect x="750.8" y="373" width="0.5" height="15.0" fill="rgb(215,67,1)" rx="2" ry="2" />
<text  x="753.84" y="383.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="50.5" y="453" width="0.4" height="15.0" fill="rgb(214,226,44)" rx="2" ry="2" />
<text  x="53.53" y="463.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="186.3" y="53" width="0.4" height="15.0" fill="rgb(223,168,9)" rx="2" ry="2" />
<text  x="189.33" y="63.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.04%)</title><rect x="780.5" y="469" width="0.4" height="15.0" fill="rgb(243,191,13)" rx="2" ry="2" />
<text  x="783.51" y="479.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.04%)</title><rect x="35.5" y="501" width="0.4" height="15.0" fill="rgb(218,92,28)" rx="2" ry="2" />
<text  x="38.49" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (4 samples, 0.14%)</title><rect x="39.2" y="501" width="1.7" height="15.0" fill="rgb(236,48,22)" rx="2" ry="2" />
<text  x="42.25" y="511.5" ></text>
</g>
<g >
<title>net.(*rawConn).Read (313 samples, 11.08%)</title><rect x="258.6" y="229" width="130.8" height="15.0" fill="rgb(245,215,27)" rx="2" ry="2" />
<text  x="261.62" y="239.5" >net.(*rawConn).R..</text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.04%)</title><rect x="503.1" y="357" width="0.4" height="15.0" fill="rgb(213,194,29)" rx="2" ry="2" />
<text  x="506.06" y="367.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.04%)</title><rect x="409.9" y="133" width="0.4" height="15.0" fill="rgb(251,158,53)" rx="2" ry="2" />
<text  x="412.88" y="143.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (6 samples, 0.21%)</title><rect x="48.0" y="549" width="2.5" height="15.0" fill="rgb(238,188,1)" rx="2" ry="2" />
<text  x="51.02" y="559.5" ></text>
</g>
<g >
<title>runtime.runqsteal (20 samples, 0.71%)</title><rect x="1022.0" y="517" width="8.4" height="15.0" fill="rgb(218,70,24)" rx="2" ry="2" />
<text  x="1025.03" y="527.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.04%)</title><rect x="720.3" y="213" width="0.5" height="15.0" fill="rgb(222,94,17)" rx="2" ry="2" />
<text  x="723.34" y="223.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeTimeLayout (1 samples, 0.04%)</title><rect x="82.3" y="405" width="0.4" height="15.0" fill="rgb(205,56,21)" rx="2" ry="2" />
<text  x="85.29" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.04%)</title><rect x="409.9" y="181" width="0.4" height="15.0" fill="rgb(206,194,31)" rx="2" ry="2" />
<text  x="412.88" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (1 samples, 0.04%)</title><rect x="767.6" y="565" width="0.4" height="15.0" fill="rgb(229,167,17)" rx="2" ry="2" />
<text  x="770.56" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/sys/unix.Kevent (23 samples, 0.81%)</title><rect x="10.0" y="565" width="9.6" height="15.0" fill="rgb(222,63,50)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>bluebell/controller.getPageInfo (2 samples, 0.07%)</title><rect x="86.5" y="485" width="0.8" height="15.0" fill="rgb(208,44,48)" rx="2" ry="2" />
<text  x="89.47" y="495.5" ></text>
</g>
<g >
<title>syscall.syscall (65 samples, 2.30%)</title><rect x="54.3" y="405" width="27.2" height="15.0" fill="rgb(211,104,27)" rx="2" ry="2" />
<text  x="57.29" y="415.5" >s..</text>
</g>
<g >
<title>syscall.syscall (221 samples, 7.83%)</title><rect x="410.7" y="149" width="92.4" height="15.0" fill="rgb(214,164,53)" rx="2" ry="2" />
<text  x="413.72" y="159.5" >syscall.sys..</text>
</g>
<g >
<title>encoding/json.addrMarshalerEncoder (3 samples, 0.11%)</title><rect x="756.7" y="229" width="1.2" height="15.0" fill="rgb(216,114,40)" rx="2" ry="2" />
<text  x="759.69" y="239.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.04%)</title><rect x="684.0" y="325" width="0.4" height="15.0" fill="rgb(206,198,35)" rx="2" ry="2" />
<text  x="686.99" y="335.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.ISO8601TimeEncoder (1 samples, 0.04%)</title><rect x="85.6" y="453" width="0.4" height="15.0" fill="rgb(210,8,31)" rx="2" ry="2" />
<text  x="88.63" y="463.5" ></text>
</g>
<g >
<title>syscall.socket (1 samples, 0.04%)</title><rect x="90.6" y="197" width="0.5" height="15.0" fill="rgb(252,100,43)" rx="2" ry="2" />
<text  x="93.64" y="207.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (1 samples, 0.04%)</title><rect x="46.4" y="485" width="0.4" height="15.0" fill="rgb(236,186,11)" rx="2" ry="2" />
<text  x="49.35" y="495.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.04%)</title><rect x="770.5" y="565" width="0.4" height="15.0" fill="rgb(250,183,28)" rx="2" ry="2" />
<text  x="773.48" y="575.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (4 samples, 0.14%)</title><rect x="765.9" y="597" width="1.7" height="15.0" fill="rgb(208,139,14)" rx="2" ry="2" />
<text  x="768.89" y="607.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.07%)</title><rect x="53.0" y="421" width="0.9" height="15.0" fill="rgb(253,107,29)" rx="2" ry="2" />
<text  x="56.04" y="431.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.04%)</title><rect x="781.3" y="501" width="0.5" height="15.0" fill="rgb(223,65,44)" rx="2" ry="2" />
<text  x="784.35" y="511.5" ></text>
</g>
<g >
<title>syscall.write (390 samples, 13.81%)</title><rect x="509.3" y="261" width="163.0" height="15.0" fill="rgb(212,103,7)" rx="2" ry="2" />
<text  x="512.33" y="271.5" >syscall.write</text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.04%)</title><rect x="1177.5" y="485" width="0.4" height="15.0" fill="rgb(223,168,37)" rx="2" ry="2" />
<text  x="1180.46" y="495.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.Field.AddTo (2 samples, 0.07%)</title><rect x="754.2" y="373" width="0.8" height="15.0" fill="rgb(246,203,0)" rx="2" ry="2" />
<text  x="757.19" y="383.5" ></text>
</g>
<g >
<title>net.(*sysDialer).doDialTCP (3 samples, 0.11%)</title><rect x="90.2" y="277" width="1.3" height="15.0" fill="rgb(220,73,5)" rx="2" ry="2" />
<text  x="93.23" y="287.5" ></text>
</g>
<g >
<title>runtime.removespecial (1 samples, 0.04%)</title><rect x="46.4" y="453" width="0.4" height="15.0" fill="rgb(221,23,31)" rx="2" ry="2" />
<text  x="49.35" y="463.5" ></text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlStmt).Close (10 samples, 0.35%)</title><rect x="674.4" y="341" width="4.2" height="15.0" fill="rgb(238,164,21)" rx="2" ry="2" />
<text  x="677.38" y="351.5" ></text>
</g>
<g >
<title>database/sql.withLock (598 samples, 21.18%)</title><rect x="253.2" y="357" width="249.9" height="15.0" fill="rgb(245,154,38)" rx="2" ry="2" />
<text  x="256.19" y="367.5" >database/sql.withLock</text>
</g>
<g >
<title>database/sql.(*Rows).close.func1 (1 samples, 0.04%)</title><rect x="672.3" y="357" width="0.4" height="15.0" fill="rgb(206,103,7)" rx="2" ry="2" />
<text  x="675.29" y="367.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (1,738 samples, 61.54%)</title><rect x="38.4" y="597" width="726.2" height="15.0" fill="rgb(224,150,7)" rx="2" ry="2" />
<text  x="41.41" y="607.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).EncodeEntry (5 samples, 0.18%)</title><rect x="81.9" y="469" width="2.1" height="15.0" fill="rgb(207,24,15)" rx="2" ry="2" />
<text  x="84.87" y="479.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.04%)</title><rect x="781.3" y="517" width="0.5" height="15.0" fill="rgb(232,168,13)" rx="2" ry="2" />
<text  x="784.35" y="527.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Next.func1 (2 samples, 0.07%)</title><rect x="738.3" y="389" width="0.8" height="15.0" fill="rgb(209,186,7)" rx="2" ry="2" />
<text  x="741.31" y="399.5" ></text>
</g>
<g >
<title>runtime.notesleep (10 samples, 0.35%)</title><rect x="776.7" y="501" width="4.2" height="15.0" fill="rgb(241,113,23)" rx="2" ry="2" />
<text  x="779.75" y="511.5" ></text>
</g>
<g >
<title>database/sql.(*DB).query (62 samples, 2.20%)</title><rect x="700.3" y="405" width="25.9" height="15.0" fill="rgb(228,229,6)" rx="2" ry="2" />
<text  x="703.28" y="415.5" >d..</text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.04%)</title><rect x="699.4" y="405" width="0.5" height="15.0" fill="rgb(228,211,46)" rx="2" ry="2" />
<text  x="702.45" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendDuration (1 samples, 0.04%)</title><rect x="83.1" y="405" width="0.4" height="15.0" fill="rgb(240,157,3)" rx="2" ry="2" />
<text  x="86.12" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).addKey (1 samples, 0.04%)</title><rect x="83.5" y="405" width="0.5" height="15.0" fill="rgb(247,17,47)" rx="2" ry="2" />
<text  x="86.54" y="415.5" ></text>
</g>
<g >
<title>runtime.mPark (10 samples, 0.35%)</title><rect x="776.7" y="517" width="4.2" height="15.0" fill="rgb(244,168,11)" rx="2" ry="2" />
<text  x="779.75" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="251.9" y="293" width="0.5" height="15.0" fill="rgb(252,92,15)" rx="2" ry="2" />
<text  x="254.93" y="303.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).close (29 samples, 1.03%)</title><rect x="726.2" y="405" width="12.1" height="15.0" fill="rgb(232,161,43)" rx="2" ry="2" />
<text  x="729.19" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap/buffer.(*Buffer).AppendByte (1 samples, 0.04%)</title><rect x="754.6" y="293" width="0.4" height="15.0" fill="rgb(216,41,26)" rx="2" ry="2" />
<text  x="757.60" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (13 samples, 0.46%)</title><rect x="755.9" y="325" width="5.4" height="15.0" fill="rgb(230,143,10)" rx="2" ry="2" />
<text  x="758.86" y="335.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.04%)</title><rect x="1177.5" y="517" width="0.4" height="15.0" fill="rgb(253,60,11)" rx="2" ry="2" />
<text  x="1180.46" y="527.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (10 samples, 0.35%)</title><rect x="674.4" y="277" width="4.2" height="15.0" fill="rgb(207,219,19)" rx="2" ry="2" />
<text  x="677.38" y="287.5" ></text>
</g>
<g >
<title>syscall.syscall (24 samples, 0.85%)</title><rect x="740.4" y="357" width="10.0" height="15.0" fill="rgb(237,181,10)" rx="2" ry="2" />
<text  x="743.40" y="367.5" ></text>
</g>
<g >
<title>runtime.makemap_small (2 samples, 0.07%)</title><rect x="86.5" y="421" width="0.8" height="15.0" fill="rgb(218,136,6)" rx="2" ry="2" />
<text  x="89.47" y="431.5" ></text>
</g>
<g >
<title>runtime.schedule (25 samples, 0.89%)</title><rect x="770.9" y="565" width="10.4" height="15.0" fill="rgb(236,68,47)" rx="2" ry="2" />
<text  x="773.90" y="575.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).RawRead (34 samples, 1.20%)</title><rect x="706.1" y="229" width="14.2" height="15.0" fill="rgb(217,22,35)" rx="2" ry="2" />
<text  x="709.13" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.07%)</title><rect x="91.9" y="341" width="0.8" height="15.0" fill="rgb(217,187,40)" rx="2" ry="2" />
<text  x="94.90" y="351.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).initQueryCache (2 samples, 0.07%)</title><rect x="86.5" y="453" width="0.8" height="15.0" fill="rgb(243,99,30)" rx="2" ry="2" />
<text  x="89.47" y="463.5" ></text>
</g>
<g >
<title>runtime.kevent (10 samples, 0.35%)</title><rect x="770.9" y="517" width="4.2" height="15.0" fill="rgb(254,75,0)" rx="2" ry="2" />
<text  x="773.90" y="527.5" ></text>
</g>
<g >
<title>net.(*Dialer).DialContext (3 samples, 0.11%)</title><rect x="90.2" y="341" width="1.3" height="15.0" fill="rgb(226,225,8)" rx="2" ry="2" />
<text  x="93.23" y="351.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.04%)</title><rect x="1021.2" y="533" width="0.4" height="15.0" fill="rgb(226,201,30)" rx="2" ry="2" />
<text  x="1024.19" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).Info (81 samples, 2.87%)</title><rect x="52.2" y="517" width="33.8" height="15.0" fill="rgb(241,117,47)" rx="2" ry="2" />
<text  x="55.20" y="527.5" >go..</text>
</g>
<g >
<title>github.com/go-sql-driver/mysql.(*mysqlConn).writePacket (362 samples, 12.82%)</title><rect x="258.6" y="261" width="151.3" height="15.0" fill="rgb(223,194,3)" rx="2" ry="2" />
<text  x="261.62" y="271.5" >github.com/go-sql-d..</text>
</g>
<g >
<title>bluebell/dao/mysql.GetPostDetailByID (1 samples, 0.04%)</title><rect x="88.1" y="453" width="0.5" height="15.0" fill="rgb(215,11,23)" rx="2" ry="2" />
<text  x="91.14" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="46.4" y="501" width="0.4" height="15.0" fill="rgb(250,172,48)" rx="2" ry="2" />
<text  x="49.35" y="511.5" ></text>
</g>
<g >
<title>syscall.fcntl (6 samples, 0.21%)</title><rect x="31.7" y="469" width="2.5" height="15.0" fill="rgb(249,197,33)" rx="2" ry="2" />
<text  x="34.73" y="479.5" ></text>
</g>
<g >
<title>runtime.copystack (2 samples, 0.07%)</title><rect x="86.5" y="341" width="0.8" height="15.0" fill="rgb(230,127,53)" rx="2" ry="2" />
<text  x="89.47" y="351.5" ></text>
</g>
<g >
<title>runtime.stopm (328 samples, 11.61%)</title><rect x="1030.4" y="533" width="137.0" height="15.0" fill="rgb(254,164,53)" rx="2" ry="2" />
<text  x="1033.38" y="543.5" >runtime.stopm</text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).Error (38 samples, 1.35%)</title><rect x="740.0" y="469" width="15.9" height="15.0" fill="rgb(231,55,41)" rx="2" ry="2" />
<text  x="742.98" y="479.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.04%)</title><rect x="720.3" y="197" width="0.5" height="15.0" fill="rgb(237,174,43)" rx="2" ry="2" />
<text  x="723.34" y="207.5" ></text>
</g>
<g >
<title>syscall.syscall (4 samples, 0.14%)</title><rect x="704.5" y="213" width="1.6" height="15.0" fill="rgb(207,36,32)" rx="2" ry="2" />
<text  x="707.46" y="223.5" ></text>
</g>
<g >
<title>time.nextStdChunk (1 samples, 0.04%)</title><rect x="757.5" y="181" width="0.4" height="15.0" fill="rgb(237,150,37)" rx="2" ry="2" />
<text  x="760.53" y="191.5" ></text>
</g>
<g >
<title>runtime.libcCall (113 samples, 4.00%)</title><rect x="1119.8" y="453" width="47.2" height="15.0" fill="rgb(248,161,40)" rx="2" ry="2" />
<text  x="1122.80" y="463.5" >runt..</text>
</g>
<g >
<title>all (2,824 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(221,20,25)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
</g>
</svg>
